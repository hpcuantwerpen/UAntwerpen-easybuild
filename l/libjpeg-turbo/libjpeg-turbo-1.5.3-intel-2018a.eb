easyblock = 'ConfigureMake'

name = 'libjpeg-turbo'
version = '1.5.3'

homepage = 'http://sourceforge.net/projects/libjpeg-turbo/'

whatis = [
    'Description: SIMD-accelerated libjpeg-compatible JPEG codec library',
    'This module provides a number of command line tools and static and shared libraries.'
]

description = """
libjpeg-turbo is a JPEG image codec that uses SIMD instructions (MMX, SSE2,
NEON, AltiVec) to accelerate baseline JPEG compression and decompression on x86,
x86-64, ARM, and PowerPC systems. On such systems, libjpeg-turbo is generally
2-6x as fast as libjpeg, all else being equal. On other types of systems,
libjpeg-turbo can still outperform libjpeg by a significant amount, by virtue of
its highly-optimized Huffman coding routines. In many cases, the performance of
libjpeg-turbo rivals that of proprietary high-speed JPEG codecs.

libjpeg-turbo implements both the traditional libjpeg API as well as the less
powerful but more straightforward TurboJPEG API. libjpeg-turbo also features
colorspace extensions that allow it to compress from/decompress to 32-bit and
big-endian pixel buffers (RGBX, XBGR, etc.).
"""
usage = """
The libjpeg-turbo package contains a number of command line utilities:
+ cjpeg: compress an image file to a JPEG file
+ djpeg: Decompress a JPEG file to an image file
+ jpegtran: Lossless transformation of JPEG files
+ rdjpgcom: Display text comments from a JPEG file
+ wrjpgcom: Insert text comments into a JPEG file
Extensive help is available for these commands as Linux man pages. All
commands also support the --help command line option. 

The module also provides the benchmarking tool tjbench.

The API-documentation is web-based.
"""

docurls = [
    'Web-based API-documentation: https://libjpeg-turbo.org/Documentation',
    'Man pages for the command line utilities cjpeg, djpeg, jpegtran,rdjpgcom and wrjpgcom', 
]

toolchain = {'name': 'intel', 'version': '2018a'}
toolchainopts = {'pic': True}

source_urls = [SOURCEFORGE_SOURCE]
sources = [SOURCELOWER_TAR_GZ]

builddependencies = [
    ('buildtools', '2018a', '', True), # Uses NASM
]

configopts = "--with-jpeg8"
runtest = "test"

sanity_check_paths = {
    'files': ['bin/cjpeg', 'bin/djpeg', 'bin/jpegtran', 'bin/rdjpgcom', 'bin/tjbench', 'bin/wrjpgcom',
              'lib/libjpeg.a', 'lib/libjpeg.%s' % SHLIB_EXT, 'lib/libturbojpeg.a', 'lib/libturbojpeg.%s' % SHLIB_EXT],
    'dirs': ['include', 'share'],
}

moduleclass = 'lib'

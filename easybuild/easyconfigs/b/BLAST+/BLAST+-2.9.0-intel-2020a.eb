##
# This file is an EasyBuild reciPY as per https://github.com/easybuilders/easybuild
#
# Copyright:: Copyright 2012-2014 Uni.Lu/LCSB, NTUA
# Authors::   Fotis Georgatos <fotis@cern.ch>, Kenneth Hoste (UGent)
# License::   MIT/GPL
# $Id$
#
# This work implements a part of the HPCBIOS project and is a component of the policy:
# http://hpcbios.readthedocs.org/en/latest/HPCBIOS_2012-94.html
##

easyblock = 'ConfigureMake'

local_buildset =         '2020a'
local_gcc_version =      '9.3.0'

local_BLASTplus_version =   '2.9.0'               # https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/
local_Boost_version =       '1.73.0'              # https://www.boost.org/users/download/

name =    'BLAST+'
version = local_BLASTplus_version

homepage = 'http://blast.ncbi.nlm.nih.gov/'

whatis = [
    "Description: BLAST+ or Basic Local Alignment Search Tool, a tool to find regions of similarity between biological sequences.",
    "This module provides a range of executables iand static libraries, compiled with MPI support.",
]

description = """
The Basic Local Alignment Search Tool (BLAST) finds regions of local similarity
between sequences. The program compares nucleotide or protein sequences to
sequence databases and calculates the statistical significance of matches. BLAST
can be used to infer functional and evolutionary relationships between sequences
as well as help identify members of gene families.

This module is compiled with support for the LMDB in-memory database for speed.
JPEG and PNG are supported for graphics. BLAST+ was compiled with MPI support.
"""

docurls = [
    "BLAST Command Line Application User Manual: https://www.ncbi.nlm.nih.gov/books/NBK279690/",
    "BLAST Help: https://www.ncbi.nlm.nih.gov/books/NBK1762/",
]

toolchain =     {'name': 'intel', 'version': local_buildset}
toolchainopts = {'cstd': 'c++14', 'usempi': True}

source_urls = ['http://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/%(version)s/']
sources =     ['ncbi-blast-%(version)s+-src.tar.gz']
patches = [
    'BLAST+-%(version)s_fix_boost.patch',
    'BLAST+-%(version)s_fix-64-icc.patch',
]
checksums = [
    'a390cc2d7a09422759fc178db84de9def822cbe485916bbb2ec0d215dacdc257',  # ncbi-blast-2.9.0+-src.tar.gz
    '44dc4a931896953d78c13097433ea6fc8d7990bd759c4e4e5bbb9b2574fb4154',  # BLAST+-2.9.0_fix_boost.patch
    'adf52ef6da03b951bde7ec4fabc8686186b66ecd88373263bc74c21b32a1f354',  # BLAST+-2.9.0_fix-64-icc.patch
]

dependencies = [
    ('baselibs', local_buildset,      '',           ('GCCcore', local_gcc_version)),
# Each of the following modules needs matching options for the configure process
    ('Boost',    local_Boost_version),
]

# avoid linking error 'cannot find -liomp5' on small helper utility that is built with gcc
preconfigopts = 'unset LIBS && '
prebuildopts = preconfigopts

# configure script uses -openmp with Intel compilers, which is no longer valid (-fopenmp is more generic than -qopenmp)
configopts  = "OPENMP_FLAGS='-fopenmp' "
configopts += '--with-64 '

# Use a couple of build-in libraries rather than their independent
# counterpart, even if they are installed in separate modules, to reduce dependencies.
# configopts += '--without-z --without-bz2 --without-pcre '
configopts += '--with-z=$EBROOTBASELIBS --with-bz2=$EBROOTBASELIBS ' # In c++/src/util/compress
configopts += '--with-pcre=$EBROOTBASELIBS '                         # In c++/src/util/regexp
configopts += '--with-lmdb=$EBROOTBASELIBS '                         # In c++/src/util/lmdb

# LZO support (will actually be picked up from baselibs automatically)
configopts += '--with-lzo=$EBROOTBASELIBS '

sanity_check_paths = {
    'files': ['bin/blastn', 'bin/blastp', 'bin/blastx'],
    'dirs':  []
}

moduleclass = 'bio'

# Note that this package should be compiled on a compute node as otherwise 
# the tests will fail as MPI can't find which nodes to use.
name = 'FFTW'
version = '3.3.6'

homepage = 'http://www.fftw.org'
description = """FFTW is a C subroutine library for computing the discrete Fourier transform (DFT) 
in one or more dimensions, of arbitrary input size, and of both real and complex data. 
This version is compiled with support for AVX, AVX2 and AVX512, MPI, OpenMP and threads."""

toolchain = {'name': 'intel', 'version': '2018pre'}
# Note:
# - We let the configure script set appropriate optimization options and don't want 
#   easybuild to force the use of -xHost. In fact, FFTW is a multiplatform library
#   that will detect the CPU on use and chose the appropriate code path.
# - PIC: True is not needed as the configure script sets the -fPIC option itself.
toolchainopts = {'optarch': False}

source_urls = [homepage]
sources = ['fftw-%(version)s-pl2.tar.gz']
checksums = ['927e481edbb32575397eb3d62535a856']

# As all our clusters support at least AVX nowadays, we don't need to
# build separate variants for SSE or SSE2.
use_sse = False
use_sse2 = False

use_avx = True
use_avx2 = True
use_avx512 = True

# KL: This is for AMD cpus only anyway.
use_fma4 = False

# PRECISION
#
# no quad precision, requires GCC v4.6 or higher
# see also http://www.fftw.org/doc/Extended-and-quadruple-precision-in-Fortran.html
with_quad_prec = False

# No MPI for now to test if this works.
#with_mpi = False

# The testing fails when not done on a compute node as the MPI tests can't find a
# hostfile or so. But you can comment this out.
#runtest = 'check'

moduleclass = 'numlib'

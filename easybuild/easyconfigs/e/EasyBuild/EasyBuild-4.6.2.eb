easyblock = 'EB_EasyBuildMetaCalcUA'

name =    'EasyBuild'
version = '4.6.2'

homepage = 'https://easybuilders.github.io/easybuild'

whatis = [
    "Description: EasyBuild is a software build and installation framework written in Python that allows you to install software in a structured, repeatable and robust way."
]

description = """
EasyBuild is a software build and installation framework
written in Python that allows you to install software in a structured,
repeatable and robust way.
"""

usage = """
See the documentation on readthedocs. Only the documentation of the latest
version is readily available.

Things to know about our local installation:
 - The location of the EasyBuild files that we used can be found
   easily by executing `eb --show-config` after loading the 
   EasyBuild-user module.
 - We maintain a GitHub repository with our EasyConfig files and our
   custom EasyBlocks: https://github.com/hpcuantwerpen/UAntwerpen-easybuild
 - Note that our UAntwerp EasyBuild installation differs in a number of
   aspects form an installation that you get from the default EasyBuilders
   repositories. Hence you may want to make sure that EasyBuild checks our
   repositories before checking the default ones if you want to build on top
   of modules that we already provide.
    - Specifically, we work a lot with bundles that bundle the functionality
      of several other EasyBuild EasyConfigs/modules into one to reduce module
      clutter.
    - For centrally installed modules we also use our own naming scheme as the
      subdivision according to moduleclass is often arbitrary and therefore not
      used in practice to limit the modules that one sees.
"""

docurls = [
    "Web-based documentation on https://easybuild.readthedocs.io/"
]

toolchain = SYSTEM

source_urls = [
    # easybuild-framework
    'https://files.pythonhosted.org/packages/88/7f/67dd44ae3204cba36c66578b14e284ce5210d8217fb383eb24c1691a1bfd/',
    # easybuild-easyblocks
    'https://files.pythonhosted.org/packages/fe/52/2609eb0d2b9e9678670c2faec23b14c9c180b4a1d2494fd91c29df2a9a5e/',
    # easybuild-easyconfigs
    'https://files.pythonhosted.org/packages/5c/6b/1ead89a64a19717e5b0a0c8453458e7186928a36280e9592092ee6d58273/',

]
sources = [
    'easybuild-framework-%(version)s.tar.gz',
    'easybuild-easyblocks-%(version)s.tar.gz',
    'easybuild-easyconfigs-%(version)s.tar.gz',
]
checksums = [
    '136a49ed40b4d7fed1b3d3d47f0f2804cb7744fd886eb9887672e85f7e820499',  # easybuild-framework-4.6.2.tar.gz
    'b88059feeb2a97c944f6a71dc88cec683fef650ac081f8563b3f312cf8fe2794',  # easybuild-easyblocks-4.6.2.tar.gz
    'b9a305200c8874852cfa3d07d72ed7295481c1b532f7579dcf1212deebcd393b',  # easybuild-easyconfigs-4.6.2.tar.gz
]

# order matters a lot, to avoid having dependencies auto-resolved (--no-deps easy_install option doesn't work?)
# EasyBuild is a (set of) Python packages, so it depends on Python
# usually, we want to use the system Python, so no actual Python dependency is listed
allow_system_deps = [('Python', SYS_PYTHON_VERSION)]

local_pyshortver = '.'.join(SYS_PYTHON_VERSION.split('.')[:2])

exts_defaultclass = 'PythonPackage'
exts_filter = ("python3 -c 'import %(ext_name)s'", '')
exts_default_options = {
    'download_dep_fail': False, # Otherwise the sanity check for archspec fails, even though the two dependencies are installed by hand.
    'sanity_pip_check':  False,
    'source_urls':       [PYPI_SOURCE],
    'use_pip':           False,
}

exts_list = [
    ('six',               '1.16.0',   {}),
    ('click',             '7.1.2',    {}),    # archspec 0.1.3 is incompatible with more recent versions of click
    ('archspec',          '0.1.3',    {}),
    ('colorama',          '0.4.4',    {}),
    ('commonmark',        '0.9.1',    {}),
    ('dataclasses',       '0.8',      {}),
    ('Pygments',          '2.11.2',   {}),
    ('typing_extensions', '3.10.0.2', {}), # The 4.0.x versions did not install, maybe due to the lack of pip?
    ('rich',              '11.2.0',   {}),
]

sanity_check_paths = {
    'files': ['bin/eb'],
    'dirs':  ['lib/python%s/site-packages' % local_pyshortver],
}

# Set Python 3 for EasyBuild
modextravars = {
    'EB_PYTHON': 'python3',
}

moduleclass = 'tools'

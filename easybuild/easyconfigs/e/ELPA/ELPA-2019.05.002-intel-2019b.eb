##
# This file is an EasyBuild reciPY as per https://github.com/easybuilders/easybuild
#
# Authors::   Inge Gutheil <i.gutheil@fz-juelich.de>, Alan O'Cais <a.ocais@fz-juelich.de>
# License::   MIT/GPL
# $Id$
#
##

easyblock = 'ConfigureMake'

name = 'ELPA'
version = '2019.05.002'

homepage = 'http://elpa.mpcdf.mpg.de'

whatis = [
    "Description: ELPA - Eigenvalue SoLvers for Petaflop-Applications",
]

description = """
ELPA - Eigenvalue SoLvers for Petaflop-Applications.

ELPA provides static and shared libraries with and without OpenMP support.
"""

toolchain = {'name': 'intel', 'version': '2019b'}
toolchainopts = {'usempi': True}

source_urls = ['http://elpa.mpcdf.mpg.de/html/Releases/%(version)s/']
sources = [SOURCELOWER_TAR_GZ]

checksums = [
    'd2eab5e5d74f53601220b00d18185670da8c00c13e1c1559ecfb0cd7cb2c4e8d'
]

builddependencies = [
    ('buildtools', '%(toolchain_version)s', '', True),
]

preconfigopts = 'autoreconf && '

local_common_configopts = 'FCFLAGS="-I$EBROOTIMKL/mkl/include/intel64/lp64 $FCFLAGS" '
local_common_configopts += 'LIBS="$LIBSCALAPACK" '

configopts = [
    local_common_configopts + '--enable-openmp ',
    local_common_configopts,  # Default version last, so we can get the normal config.h/config-f90.h installed afterwards.
]

# Distribution tarball contains Fortran module files, we need to clean
# them up first:
prebuildopts = 'make clean && '

buildopts = ' V=1 '

postinstallcmds = [
    # The include files and Fortran module files are identical with and
    # without openmp.
    'ln -s elpa-%(version)s/elpa %(installdir)s/include',
    'ln -s elpa-%(version)s/modules %(installdir)s/include',
]

sanity_check_paths = {
    'files': ['lib/libelpa.a', 'lib/libelpa.%s' % SHLIB_EXT, 'lib/libelpa_openmp.a',
              'lib/libelpa_openmp.%s' % SHLIB_EXT, ],
    'dirs': ['bin', 'include/elpa-%(version)s/elpa', 'include/elpa-%(version)s/modules', 'lib/pkgconfig'],
}

moduleclass = 'math'

easyblock = 'ConfigureMake'

buildset =             '2019b'
gcc_version =          '8.3.0'
binutils_version =     '2.32'

zlib_version =         '1.2.11'        # https://zlib.net/
NSPR_version =         '4.22'          # https://archive.mozilla.org/pub/nspr/releases
NSS_version =          '3.45'          # https://ftp.mozilla.org/pub/security/nss/releases/

name =         'NSS'
version =       NSS_version
versionsuffix = '-baselibsDevel'

homepage = 'https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS'

whatis = [
    "Description: NSS is the Network Security Services, a set of libraries designed to support cross-platform development of security-enabled client and server applications"
]

description = """
Network Security Services (NSS) is a set of libraries designed to support 
cross-platform development of security-enabled client and server applications.
"""

toolchain =     {'name': 'GCCcore', 'version': gcc_version}
toolchainopts = {'pic': True}

source_urls = ['https://ftp.mozilla.org/pub/security/nss/releases/NSS_%(version_major)s_%(version_minor)s_RTM/src/']
sources =     [SOURCELOWER_TAR_GZ]
patches =     ['NSS-3.39_pkgconfig.patch']
checksums = [
    '112f05223d1fde902c170966bfc6f011b24a838be16969b110ecf2bb7bc24e8b',  # nss-3.45.tar.gz
    '5c4b55842e5afd1e8e67b90635f6474510b89242963c4ac2622d3e3da9062774',  # NSS-3.39_pkgconfig.patch
]

builddependencies = [
    ('binutils',   binutils_version),
    ('buildtools', buildset,         '', True),
]

dependencies = [
#    ('baselibs', buildset), # for zlib
    ('zlib',     zlib_version, '-baselibsDevel'),
    ('NSPR',     NSPR_version, '-baselibsDevel'),
]

# building in parallel fails
parallel = 1

skipsteps = ['configure','install']

# Note: we try to imitate as much as possible what would happen in a Bundle
# when files_to_copy fails for directories that already exist and
# postinstallcmds in a Bundle component also does not work as expected.
# fix for not being able to find header files
buildopts  = 'BUILD_OPT=1 USE_64=1 CPATH="$EBROOTNSPR/include/nspr:$CPATH" && '
# also install pkgconfig file (see patch)
buildopts += "cd config && make PREFIX=%(installdir)s BUILD_OPT=1 USE_64=1 && cd - && "
buildopts += '/bin/cp -Lpr %(builddir)s/%(namelower)s-%(version)s/dist/Linux*.OBJ/* %(installdir)s && '
buildopts += '/bin/cp -Lpr %(builddir)s/%(namelower)s-%(version)s/dist/public       %(installdir)s/include'

# We need to skip the install step completely and do everything by hand as it 
# erases the files we created above.
# This was originally a MakeCp, but even with a skipsteps=install files_to_copy is still expected.
#files_to_copy = ['../dist/Linux*.OBJ/*', (['../dist/public/*'], 'include')]
#files_to_copy = [(['../dist/public/*'], 'include')]

sanity_check_paths = {
    'files': ['lib/libnss.a'],
    'dirs':  ['bin', 'include/dbm', 'include/nss'],
}

modextrapaths = {'CPATH': 'include/nss'}

moduleclass = 'lib'

easyblock = 'Bundle'
#
# Bundle to install netCDF together with the Fortran and both C++ interfaces
# in a single directory structure. Installing in separate directories/modules
# has caused trouble in the past with configure scripts expecting all interface
# libraries to be in the same directory.
# 

name =                  'netCDF'
version =               '4.7.0'
versionsuffix =         '-MPI'
local_version_pnetcdf = '1.12.0'
local_version_fortran = '4.4.5'
local_version_cpp4 =    '4.3.0'
local_version_cpp3 =    '4.2'
# Version numbers on 20190729
# netCDF-C:       4.7.0
# netCDF-Fortran: 4.4.5
# netCDF-4 C++:   4.3.0
# netCDF-3 C++:   4.2 (legacy C++)

local_buildset =    '2019b'
local_gcc_version = '8.3.0'

homepage = 'http://www.unidata.ucar.edu/software/netcdf/'

whatis = [
    'Description: File format for array-oriented scientific data',
    'This module contains the netCDF command line tools and static and shared libraries for C, C++ and Fortran, compiled with MPI support, and the PnetCDF backend',
] 

description = """
NetCDF (network Common Data Form) is a set of interfaces for array-oriented data
access and a freely distributed collection of data access libraries for C,
Fortran, C++, Java, and other languages. The netCDF libraries support a
machine-independent format for representing scientific data. Together, the
interfaces, libraries, and format support the creation, access, and sharing of
scientific data.

NetCDF data is:
* Self-Describing. A netCDF file includes information about the data it contains.
* Portable. A netCDF file can be accessed by computers with different ways of
  storing integers, characters, and floating-point numbers.
* Scalable. A small subset of a large dataset may be accessed efficiently.
* Appendable. Data may be appended to a properly structured netCDF file without
  copying the dataset or redefining its structure.
* Sharable. One writer and multiple readers may simultaneously access the same
  netCDF file.
* Archivable. Access to all earlier forms of netCDF data will be supported by
  current and future versions of the software.

The netCDF software was developed by Glenn Davis, Russ Rew, Ed Hartnett, John
Caron, Dennis Heimbigner, Steve Emmerson, Harvey Davies, and Ward Fisher at the
Unidata Program Center in Boulder, Colorado, with contributions from many other
netCDF users.

This module contains the C, Fortran and both C++-interfaces and supports MPI.

The PnetCDF back-end for parallel access to files in the non-HDF5-based formats
is also available.
"""

usage = """
The module contains a number of command line tools for managing netCDF files:
* nccopy: Copy a netCDF file, optionally changing format, compression, or
          chunking in the output
* ncdump: Convert netCDF file to text form (CDL)
* ncgen:  From a CDL file generate a netCDF-3 file, a netCDF-4 file or a C
          program
* ncgen3: From a CDL file generate a netCDF classic or 64 bit classicfile, a
          C program, or a Fortran program
There are also a number of commands to request information about the netCDF
configuration: nc-config, ncxx4-config, nf-config and pnetcdf_version.

The API is documented in the web-based documentation and to some extent also
in the netcdf and netcds_fortran manual pages.
"""

docurls = [
    'Web-based documentation: https://www.unidata.ucar.edu/software/netcdf/docs/index.html',
    'Man pages for the command line utitlities (section 1) and netcdf and netcdf_fortran (section 3)',
    'Web-based documentation for PnetCDF: https://parallel-netcdf.github.io/',
]

toolchain =     {'name': 'intel', 'version': local_buildset}
toolchainopts = {'pic': True, 'usempi': True}

#sources = ['v%(version)s.tar.gz']
source_urls = [
    'ftp://ftp.unidata.ucar.edu/pub/netcdf/',
    'https://parallel-netcdf.github.io/Release/',
]

dependencies = [
    ('baselibs', local_buildset, '',    ('GCCcore', local_gcc_version)), # for cURL, zlib and Szip
    ('HDF5',     '1.8.21',       '-MPI'),
]

builddependencies = [ 
    ('buildtools', local_buildset, '', True),
]

default_easyblock = 'ConfigureMake'

components = [
    ('PnetCDF', local_version_pnetcdf, { 
#       https://parallel-netcdf.github.io/Release/pnetcdf-1.12.0.tar.gz
        'sources':    ['pnetcdf-%(version)s.tar.gz'],
        'start_dir':  'pnetcdf-%(version)s',
        'configopts': '--enable-shared --enable-static'
    }),
    ('netCDF-C', version, { 
#       ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-c-4.6.3.tar.gz
        'sources':        ['netcdf-c-%(version)s.tar.gz'],
        'start_dir':      'netcdf-c-%(version)s',
        'preconfigopts':  'LIBRARY_PATH=%(installdir)s/lib:${LIBRARY_PATH} CPATH=%(installdir)s/include:${CPATH} ',
        'configopts':     '--enable-shared --enable-static --enable-pnetcdf --with-pnetcdf=%(installdir)s',
        'prebuildopts':   'LIBRARY_PATH=%(installdir)s/lib:${LIBRARY_PATH} CPATH=%(installdir)s/include:${CPATH} ',
        'preinstallopts': 'LIBRARY_PATH=%(installdir)s/lib:${LIBRARY_PATH} CPATH=%(installdir)s/include:${CPATH} ',
    }),
    ('netCDF-Fortran', local_version_fortran, { 
#       ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-fortran-4.4.4.tar.gz
        'sources':    ['netcdf-fortran-%(version)s.tar.gz'],
        'start_dir':  'netcdf-fortran-%(version)s',
        'configopts': '--enable-shared --enable-static'
    }),
    ('netCDF-CXX3', local_version_cpp3, { 
#       ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx-4.2.tar.gz
        'sources':    ['netcdf-cxx-%(version)s.tar.gz'],
        'start_dir':  'netcdf-cxx-%(version)s',
        'configopts': '--enable-shared --enable-static'
    }),
    ('netCDF-CXX4', local_version_cpp4, { 
#       ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-cxx4-4.3.0.tar.gz
        'sources':    ['netcdf-cxx4-%(version)s.tar.gz'],
        'start_dir':  'netcdf-cxx4-%(version)s',
        'configopts': '--enable-shared --enable-static'
    }),
]

sanity_check_paths = {
    'files': ['bin/pnetcdf_version', 'bin/nc-config', 'bin/ncxx4-config', 'bin/nf-config'],
    'dirs':  ['include', 'lib'],
}

modextravars = {'PNETCDF': '%(installdir)s'}

moduleclass = 'data'

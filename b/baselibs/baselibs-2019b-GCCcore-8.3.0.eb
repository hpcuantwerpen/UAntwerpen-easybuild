easyblock = 'Bundle'

name = 'baselibs'
version = '2019b'
#versionsuffix = '-dev'

homepage = '(none)'

# We list all libraries in a whatis line so that they can be found by module keyword.
# Contrary to what the LMOD documentation makes you believe, it seems that help is
# not searched when using module keyword.
whatis = [
    "Description: A number of usefull libraries, installed together as a bundle",
    "Contains: ncurses/ncursesw, readline, bzip2, Szip, XZ utils, zlib, lz4, libarchive, "+ 
    "JasPer, libjpeg-turbo, libpng, LibTIFF, x264, x265, LAME, cURL, expat, libxml2, libxslt, "+ 
    "GSL, libcerf, GMP, MPFR, MPC, pixman, freetype, fontconfig, " + 
    "file, FriBidi, gc, gettext, libffi, libiconv, libunistring, libyaml, PCRE, UDUNITS, util-linux.",
]

binutils_version = '2.32'     # A build dependency, as GCCcore with the system binutils might fail.
gcc_version      = '8.3.0'

ncurses_version =      '6.1'           # https://ftp.gnu.org/pub/gnu/ncurses/
libreadline_version =  '8.0'           # https://ftp.gnu.org/pub/gnu/readline/
bzip2_version =        '1.0.6'         # http://www.bzip.org/downloads.html
bzip2_major_minor =    '1.0'    
Szip_version =         '2.1.1'         # https://support.hdfgroup.org/ftp/lib-external/szip/
XZ_version =           '5.2.4'         # https://tukaani.org/xz/
zlib_version =         '1.2.11'        # https://zlib.net/
lz4_version =          '1.9.1'         # https://github.com/lz4/lz4/releases
libarchive_version =   '3.4.0'         # https://github.com/libarchive/libarchive/releases
JasPer_version =       '2.0.14'        # http://www.ece.uvic.ca/~frodo/jasper/#download
libjpegturbo_version = '2.0.2'         # https://sourceforge.net/projects/libjpeg-turbo/files/
libpng_version =       '1.6.37'        # http://www.libpng.org/pub/png/libpng.html
libtiff_version =      '4.0.10'        # http://www.simplesystems.org/libtiff/
x264_version =         '20190721-2245' # https://download.videolan.org/pub/videolan/x264/snapshots/
x265_version =         '3.1.1'         # http://download.videolan.org/pub/videolan/x265/
LAME_version =         '3.100'         # http://lame.sourceforge.net/
cURL_version =         '7.65.3'        # https://curl.haxx.se/download/
expat_version =        '2.2.7'         # https://github.com/libexpat/libexpat/releases
libxml2_version =      '2.9.9'         # http://xmlsoft.org/sources/
libxslt_version =      '1.1.33'        # http://xmlsoft.org/sources/
GSL_version =          '2.5'           # https://ftp.gnu.org/gnu/gsl/
libcerf_version =      '1.13'          # https://jugit.fz-juelich.de/mlz/libcerf/-/releases
GMP_version =          '6.1.2'         # https://ftp.gnu.org/gnu/gmp/
MPFR_version =         '4.0.2'         # https://ftp.gnu.org/gnu/mpfr/
MPC_version =          '1.1.0'         # https://ftp.gnu.org/gnu/mpc/
file_version =         '5.37'          # ftp://ftp.astron.com/pub/file/
fribidi_version =      '1.0.5'         # https://github.com/fribidi/fribidi/releases 
gc_version =           '8.0.4'         # http://hboehm.info/gc/gc_source/
gettext_version =      '0.20.1'        # https://ftp.gnu.org/pub/gnu/gettext/
libffi_version =       '3.2.1'         # ftp://sourceware.org/pub/libffi/
libiconv_version =     '1.16'          # https://ftp.gnu.org/pub/gnu/libiconv/
libunistring_version = '0.9.10'        # https://ftp.gnu.org/gnu/libunistring/
libyaml_version =      '0.2.2'         # https://github.com/yaml/libyaml/releases
PCRE_version =         '8.43'          # https://ftp.pcre.org/pub/pcre/
UDUNITS_version =      '2.2.26'        # ftp://ftp.unidata.ucar.edu/pub/udunits
util_version =         '2.34'          # https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/
pixman_version =       '0.38.4'        # https://www.cairographics.org/releases/
freetype_version =     '2.10.1'        # https://download.savannah.gnu.org/releases/freetype/
fontconfig_version =   '2.13.1'        # https://www.freedesktop.org/software/fontconfig/release/

description = """
This module provides a large number of up-to-date base libraries used by many
packages and as such effectively an update to the often very conservative
Linux enterprise-oriented distributions.

Overview of included libraries:

* Terminal I/O
  + ncurses (version %(ncurses)s): The Ncurses (new curses) library is a free software
    emulation of curses in System V Release 4.0, and more. It uses Terminfo
    format, supports pads and color and multiple highlights and forms characters
    and function-key mapping, and has all the other SYSV-curses enhancements
    over BSD Curses.
    Documentation is available through man pages in sections 3, 5 and 7.
  + libreadline (version %(libreadline)s): The GNU Readline library provides a set of
    functions for use by applications that allow users to edit command lines as
    they are typed in. Both Emacs and vi editing modes are available. 
    The Readline library includes additional functions to maintain a list of
    previously-entered command lines, to recall and perhaps reedit those lines,
    and perform csh-like history expansion on previous commands.
    There are manual pages for readline and history and help via info.
* File compression tools and libraries
  + bzip2 (version %(bzip2)s): Patent-free high-quailty data compressor
    with very good compression yet fast compression and decompression 
    (.bz2 files)
  + LZ4 (version %(lz4)s): lossless compression algorithm, providing compression 
    speed > 500 MB/s per core, scalable with multi-cores CPU. It features 
    an extremely fast decoder, with speed in multiple GB/s per core, 
    typically reaching RAM speed limits on multi-core systems.
  + Szip (version %(Szip)s): library maintained by the HDF group for lossless
    compression of scientific data.
  + XZ Utils (version %(XZ)s): XZ data compression libraries and 
    utilities and the successor to LZMA Utils. It contains the liblzma library
    with API similar to that of zlib and some command line tools and shell 
    scripts with similar function as those that come with gzip (xz, xzdec,
    xzgrep, xzdiff, ...)
  + zlib (version %(zlib)s): Free lossless data compression library, not 
    covered by any patents, for the popular .gz files.
  + libarchive (version %(libarchive)s): Multi-format archive and compression library.
* Graphics file formats
  + JasPer (version %(JasPer)s): an open-source initiative to provide a free
    software-based reference implementation of the codec specified in the
    JPEG-2000 Part-1 standard (i.e., ISO/IEC 15444-1). The JasPer software is
    written in the C programming language. The software has been included in
    the JPEG-2000 Part-5 standard (i.e., ISO/IEC 15444-5), as an official
    reference implementation of the JPEG-2000 Part-1 codec. This software has
    also been incorporated into numerous other software projects (some
    commercial and some non-commercial).
    There is a web-based reference manual and man pages and a --help option
    for the commands imgcmp, imginfo and jasper.
  + libjpeg-turbo (version %(libjpegturbo)s): libjpeg-turbo is a JPEG image codec that
    uses SIMD instructions (MMX, SSE2, NEON, AltiVec) to accelerate baseline
    JPEG compression and decompression on x86, x86-64, ARM, and PowerPC systems.
    On such systems, libjpeg-turbo is generally 2-6x as fast as libjpeg, all
    else being equal. On other types of systems, libjpeg-turbo can still
    outperform libjpeg by a significant amount, by virtue of its
    highly-optimized Huffman coding routines. In many cases, the performance of
    libjpeg-turbo rivals that of proprietary high-speed JPEG codecs.
    libjpeg-turbo implements both the traditional libjpeg API as well as the
    less powerful but more straightforward TurboJPEG API. libjpeg-turbo also
    features colorspace extensions that allow it to compress from/decompress to
    32-bit and big-endian pixel buffers (RGBX, XBGR, etc.).
    It also includes a number of command line tools: cjpeg, djpeg, jpegtran,
    rdjpgcom and wrjpgcom, all supporting --help.
  + libpng (version %(libpng)s): libpng is the official PNG reference library. It
    supports almost all PNG features, is extensible, and has been extensivelys
    tested. The home site for development versions (i.e., may be buggy or
    subject to change or include experimental features) is
    https://libpng.sourceforge.io/, and the place to go for questions about the
    library is the png-mng-implement mailing list.
    libpng is available as ANSI C (C89) source code
    The libpng 1.5.x, 1.6.x, and upcoming 1.7.x series continue the evolution of
    the libpng API, finally hiding the contents of the venerable and hoary
    png_struct and png_info data structures inside private (i.e., non-installed)
    header files. Instead of direct struct-access, applications should be using
    the various png_get_xxx() and png_set_xxx() accessor functions, which have
    existed for almost as long as libpng itself.
  + LibTIFF (version %(libtiff)s): This software provides support for the Tag Image
    File Format (TIFF), a widely used format for storing image data. The latest
    version of the TIFF specification is available on-line in several different formats.
    Included in this software distribution is a library, libtiff, for reading and
    writing TIFF, a small collection of tools for doing simple manipulations of TIFF
    images, and documentation on the library and tools. Libtiff is a portable software,
    it was built and tested on various systems: UNIX flavors (Linux, BSD, Solaris,
    MacOS X), Windows, and OpenVMS. It should be possible to port libtiff and
    additional tools on other OSes.
    The library, along with associated tool programs, should handle most of your
    needs for reading and writing TIFF images.
* Audio and video
  + x264 (version v%(x264)s): x264 is a free software library and
    application for encoding video streams into the H.264/MPEG-4 AVC compression
    format, and is released under the terms of the GNU GPL. It is developed by
    the VideoLAN organization.
  + x265 (version %(x265)s): x265 is a free software library and application for
    encoding video streams into the H.265 AVC compression format, and is released
    under the terms of the GNU GPL. It is developed by the VideoLAN organization.
    Documentation for the x265 command line tool is available through the --help
    command line option. Both the command line tool and API are also documented
    on the web.
  + LAME (version %(LAME)s): LAME is a high quality MPEG Audio Layer III (MP3)
    encoder licensed under the LGPL.
    Run lame with the --help option to get some help on the command line options
    of the lame command line tool. There is also a manual page for the lame
    command. The API is very poorly documented (basically through the source code).
* Networking and XML
  + cURL (version %(cURL)s): libcurl is a free and easy-to-use client-side
    URL transfer library, supporting DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS,
    IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMTP, SMTPS,
    Telnet and TFTP. libcurl supports SSL certificates, HTTP POST, HTTP PUT,
    FTP uploading, HTTP form based upload, proxies, cookies, user+password
    authentication (Basic, Digest, NTLM, Negotiate, Kerberos), file transfer
    resume, http proxy tunneling and more.
  + expat (version %(expat)s): Expat is an XML parser library written in C.
    It is a stream-oriented parser in which an application registers handlers
    for things the parser might find in the XML document (like start tags).
    It provides the command line tool xmlwf and static and shared libraries.
  + libxml2 (version %(xml2)s): Libxml2 is the XML C parser and toolkit
    developed for the Gnome project (but usable outside of the Gnome platform),
    it is free software available under the MIT License. XML itself is a
    metalanguage to design markup languages, i.e. text language where semantic
    and structure are added to the content using extra "markup" information
    enclosed between angle brackets. HTML is the most well-known markup
    language. Though the library is written in C a variety of language bindings
    make it available in other environments.
    There are 3 command line tools: xmlcatalog to parse and manipulate XML
    or SGML catalog viles, xmllint which is a command-line XML parser and 
    xml-config which provides information about the installed version of the
    library.
  + libxslt (version %(xslt)s): Libxslt is the XSLT C library developed for the
    GNOME project (but usable outside of the Gnome platform). XSLT itself is a
    an XML language to define transformation for XML. Libxslt is based on
    libxml2 the XML C library developed for the GNOME project. It also
    implements most of the EXSLT set of processor-portable extensions functions
    and some of Saxon's evaluate and expressions extensions.
    Users can either embed the library in their application or use xsltproc the
    command line processing tool. This library is free software and can be
    reused in commercial applications.
* Mathematical libraries
  + GSL (version %(GSL)s): The GNU Scientific Library, a numerical library for C and
    C++ programmers. The library provides a wide range of mathematical routines
    such as random number generators, special functions and least-squares fitting.
  + libcerf (version %(libcerf)s): a self-contained numeric library that provides an
    efficient and accurate implementation of complex error functions, along with
    Dawson, Faddeeva, and Voigt functions.
    Documentation in manual pages section 3: cdawson, cerf, cerfc, cerfcx, cerfi,
    dawson, erfcx, erfi, im_w_of_x, voigt and w_of_z
* Arbitrary precision mathematics
  + GMP (version %(GMP)s): a free library for arbitrary precision arithmetic,
    operating on signed integers, rational numbers, and floating-point numbers.
    There is no practical limit to the precision except the ones implied by the
    available memory in the machine GMP runs on. GMP has a rich set of
    functions, and the functions have a regular interface.
    There is a web-based document and support via the info command (info gmp)
  + MPFR (version %(MPFR)s): The MPFR library is a C library for multiple-precision
    floating-point computations with correct rounding. MPFR is based on the GMP
    multiple-precision library.
    The main goal of MPFR is to provide a library for multiple-precision
    floating-point computation which is both efficient and has a well-defined
    semantics. It copies the good ideas from the ANSI/IEEE-754 standard for
    double-precision floating-point arithmetic (53-bit significand).
    MPFR is free. It is distributed under the GNU Lesser General Public License.
  + MPC (version %(MPC)s): GNU MPC is a C library for the arithmetic of complex
    numbers with arbitrarily high precision and correct rounding of the result.
    It extends the principles of the IEEE-754 standard for fixed precision real
    floating point numbers to complex numbers, providing well-defined semantics
    for every operation. At the same time, speed of operation at high precision
    is a major design goal.
    The library is built upon and follows the same principles as GNU MPFR.
    MPFR is free. It is distributed under the GNU Lesser General Public License.
* Drawing graphics
  + pixman (version %(pixman)s): a low-level software library for pixel manipulation, 
    providing features such as image compositing and trapezoid rasterization. 
    Important users of pixman are the cairo graphics library and the X server.
    Pixman is free and open source software. It is available to be redistributed 
    and/or modified under the terms of the MIT license.
  + freetype (version %(freetype)s): TODO
  + fontconfig (version %(fontconfig)s): a library designed to provide system-wide 
    font configuration, customization and application access.
    The package contains a number of command line tools and a shared library.
* Miscellaneous
  + file (version %(filev)s): The file command is "a file type guesser", that
    is, a command-line tool that tells you in words what kind of data a file
    contains. Unlike most GUI systems, command-line UNIX systems - with this
    program leading the charge - don't rely on filename extentions to tell you
    the type of a file, but look at the file's actual contents. This is, of
    course, more reliable, but requires a bit of I/O.This is a
    re-implementation of the original file command shipped with Bell Labs UNIX.
  + FriBidi (version %(fribidiv)s): Free Implementation of the Unicode Bidirectional 
    Algorithm.
  + gc (version %(gc)s): gc is the Boehm-Demers-Weiser conservative garbage
    collector, a garbage collecting replacement for C malloc or C++ new.
  + gettext (version %(gettext)s): GNU gettest is a support library for
    multilingual programs developed in the GNU Translation Project. It
    offers to programmers, translators, and even users, a well integrated set of
    tools and documentation. Specifically, the GNU `gettext' utilities are a set
    of tools that provides a framework to help other GNU packages produce
    multi-lingual messages. These tools include a set of conventions about how
    programs should be written to support message catalogs, a directory and file
    naming organization for the message catalogs themselves, a runtime library
    supporting the retrieval of translated messages, and a few stand-alone
    programs to massage in various ways the sets of translatable strings, or
    already translated strings. A special GNU Emacs mode also helps interested
    parties in preparing these sets, or bringing them up to date.
  + libffi (version %(ffi)s): FFI stands for Foreign Function Interface.
    A foreign function interface is the popular name for the interface that
    allows code written in one language to call code written in another
    language. The libffi library really only provides the lowest, machine
    dependent layer of a fully featured foreign function interface. A layer must
    exist above libffi that handles type conversions for values passed between
    the two languages.
    The library provides a portable, high level programming interface to various
    calling conventions. This allows a programmer to call any function specified
    by a call interface description at run-time.
  + libiconv (version %(iconv)s): This library provides an implementation of the
    iconv() function call to convert various encodings to/from Unicode.
  + libunistring (version %(unistring)s): provides functions for manipulating Unicode
    strings and for manipulating C strings according to the Unicode standard.
  + libyaml (version %(yaml)s): a YAML 1.1 parser and emitter written in C.
  + PCRE (version %(PCRE)s): The PCRE library is a set of functions that implement
    regular expression pattern matching using the same syntax and semantics as
    Perl 5. PCRE has its own native API, as well as a set of wrapper functions
    that correspond to the POSIX regular expression API. The PCRE library is
    free, even for building proprietary software.
    The package includes the command line tools pcregrep, pcretest and 
    pcre-config, documented through man pages. API documentation is available
    through man pcre.
  + UDUNITS (version %(UDUNITS)s): The UDUNITS package supports units of physical 
    quantities. Its C library provides for arithmetic manipulation of units and for 
    conversion of numeric values between compatible units. The package contains an 
    extensive unit database, which is in XML format and user-extendable. The package 
    also contains a command-line utility for investigating units and converting 
    values.
    This module provides both static and shared libraries, and a command line
    utility.
  + util-linux (version %(utillinux)s): A random collection of Linux utilities
    from the Linux kernel developers.
""" % { 
    'ncurses': ncurses_version,
    'libreadline': libreadline_version,
    'bzip2': bzip2_version,
    'lz4': lz4_version,
    'Szip': Szip_version,
    'XZ': XZ_version,
    'zlib': zlib_version,
    'libarchive': libarchive_version,
    'JasPer': JasPer_version,
    'libjpegturbo': libjpegturbo_version,
    'libpng': libpng_version,
    'libtiff': libtiff_version,
    'x264': x264_version,
    'x265': x265_version,
    'LAME': LAME_version,
    'cURL': cURL_version,
    'expat': expat_version,
    'xml2': libxml2_version,
    'xslt': libxslt_version,
    'GSL': GSL_version, 
    'libcerf': libcerf_version,
    'GMP': GMP_version,
    'MPFR': MPFR_version,
    'MPC': MPC_version,
    'pixman': pixman_version,
    'freetype': freetype_version,
    'fontconfig': fontconfig_version,
    'filev': file_version,
    'fribidiv': fribidi_version,
    'gc': gc_version,
    'gettext': gettext_version,
    'ffi': libffi_version,
    'iconv': libiconv_version,
    'unistring': libunistring_version,
    'yaml': libyaml_version,
    'PCRE': PCRE_version,
    'UDUNITS': UDUNITS_version,
    'utillinux': util_version,
}

docurls = [
    'ncurses: web-based documentation on https://www.gnu.org/software/ncurses/',
    'libreadline: web-based readline user interface documentation: https://tiswww.cwru.edu/php/chet/readline/rluserman.html',
    'libreadline: web-based libreadline documentation: https://tiswww.cwru.edu/php/chet/readline/readline.html',
    'libreadline: web-based libhistory documentation: https://tiswww.cwru.edu/php/chet/readline/history.html',
    'bzip2: web-based documentation on http://www.bzip.org/docs.html',
    'LZ4: web-based documentation on https://github.com/lz4/lz4',
    'Szip: web pages on http://www.hdfgroup.org/doc_resource/SZIP/', 
    'XZ Utils: man pages for the command line utilities',
    'zlib: web-based manual on https://zlib.net/manual.html', 
    'libarchive: Some web-based documentation on https://www.libarchive.org/',
    'libjpeg-turbo web-based documentation: https://libjpeg-turbo.org/Documentation',
    'libpng: web-based documentation on http://www.libpng.org/pub/png/libpng.html',
    'x264: Some information on http://www.videolan.org/developers/x264.html',
    'x265: web-based documentation: http://x265.readthedocs.io/en/default/',
    'GSL manual: https://www.gnu.org/software/gsl/doc/html/index.html',
    'libcerf homepage: https://jugit.fz-juelich.de/mlz/libcerf',
    'GMP web-based documentation: https://gmplib.org/manual/',
    'cURL: web-based documentation: https://curl.haxx.se/docs/',
    'cURL: man pages for the curl and curl-config commands (section 1) and the library functions (section 3)',
    'expat: web-based documentation: https://libexpat.github.io/doc/',
    'expat: man page for xmlwf',
    'libxml2: web-based documentation: http://xmlsoft.org/html/index.html',
    'libxml2: an pages for the command line tools xmlcatalog, xmllint and xml-config and for libxml',
    'libxslt: web-based documentation on the home page: http://xmlsoft.org/libxslt/',
    'libxslt: man pages for xsltproc, libxslt and libexslt',
    'file: home page is https://www.darwinsys.com/file/', 
    'FriBidi: home page is https://github.com/fribidi/fribidi',
    'gc: web-based documentation on the home page http://hboehm.info/gc/',
    'gettext: web-based documentation: https://www.gnu.org/software/gettext/manual/index.html',
    'gettext: man pages for all command line tools (man section 1) and for the API (man section 3)',
    'libffi: Man pages for the library (ffi) and the functions ffi_prep_cif, ffi_prep_cif_var and ffi_call',
    'libiconv: web-based documentation on https://www.gnu.org/software/libiconv/',
    'libiconv: manual pages for the iconv command and iconv_open, iconv_close, iconvctl, iconv_open_into',
    'libunistring: web-based manual: https://www.gnu.org/software/libunistring/manual/libunistring.html',
    'libunistring: supports the info command, start with info libunistring',
    'PCRE: web-based documentation: http://www.pcre.org/original/doc/html/',
    'util-linux: documented through man pages',
    'freetype: Web-based documentation on https://www.freetype.org/freetype2/docs/documentation.html',
    'fontconfig: Web-based documentation on https://www.freedesktop.org/wiki/Software/fontconfig/',
]

util_major_minor = '.'.join(util_version.split('.')[:2])

toolchain = {'name': 'GCCcore', 'version': gcc_version}
toolchainopts = {'pic': True}

builddependencies = [
    ('binutils',   binutils_version, '', ('GCCcore', gcc_version)),
    ('buildtools', version,          '', True),
]

default_easyblock = 'ConfigureMake'

components = [
#
# Terminal libraries
#
    ('ncurses', ncurses_version, {
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       }],
        'patches':     ['ncurses-%(version)s_gcc-5.patch'],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-shared --enable-overwrite', # First build: default build.
    }),
    ('ncurses', ncurses_version, {
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       }],
        'patches':     ['ncurses-%(version)s_gcc-5.patch'],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-shared --enable-overwrite --enable-ext-colors --enable-widec --includedir=%(installdir)s/include/ncursesw/' # Second build: the UTF-8 enabled version (ncursesw)
    }),
    ('libreadline', libreadline_version, {
        'sources':     [ {
                          'filename':    'readline-%(version)s.tar.gz',
                          'source_urls': ['http://ftp.gnu.org/gnu/readline']
                       }],
        'start_dir':   'readline-%(version)s',
        'preconfigopts': "LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH LDFLAGS='-L%(installdir)s/lib -lncurses'",
    }),
#
# File compression tools
#
    ('bzip2', bzip2_version, {
        # The bzip2 EasyBlock does not work in a bundle since there is a problem with with_shared_libs
        # https://sourceforge.net/projects/bzip2/files/bzip2-1.0.6.tar.gz/download
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': [SOURCEFORGE_SOURCE]
                       }],
	    'start_dir':   '%(namelower)s-%(version)s',
        'skipsteps':   ['configure'],
        'buildopts':   'CC="$CC" CFLAGS="-Wall -Winline $CFLAGS -g \$(BIGFILES)" ; ' + \
                       'make -f Makefile-libbz2_so CC="$CC" CFLAGS="-Wall -Winline $CFLAGS -g \$(BIGFILES)" ',
        'installopts': 'PREFIX="%(installdir)s" ; ' + \
                       'cp libbz2.so.'+bzip2_version+' %(installdir)s/lib ; ' \
                       'cd %(installdir)s/lib ; ' + \
                       'ln -s libbz2.so.'+bzip2_version+' libbz2.so.'+bzip2_major_minor+' ; ' + \
                       'ln -s libbz2.so.'+bzip2_version+' libbz2.so' 
    }),
    ('lz4', lz4_version, {
        'sources':     [ {
                          'filename':    'v%(version)s.tar.gz',
                          'source_urls': ['https://github.com/lz4/lz4/archive/']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'skipsteps':   ['configure'],
        'installopts': "PREFIX=%(installdir)s",
    }),
    ('Szip', Szip_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['http://www.hdfgroup.org/ftp/lib-external/szip/%(version)s/src']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-pic'
    }),
    ('zlib', zlib_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [('http://sourceforge.net/projects/libpng/files/zlib/%(version)s', 'download')]
                       }],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('XZ', XZ_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': ['http://tukaani.org/xz/']
                       }],
        'patches':     ['XZ-5.2.2_compat-libs.patch'],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--disable-nls --disable-xz --disable-xzdec',  # First build without the need for gettext, we'll rebuild after building gettext.
    }),
    ('libarchive', libarchive_version, {
        'easyblock': 'CMakeMake',
        'sources':   [ {
                         # https://www.libarchive.org/downloads/libarchive-3.3.3.tar.gz
                         # https://github.com/libarchive/libarchive/archive/v3.4.0.tar.gz
                         'download_filename': 'v%(version)s.tar.gz',
                         'filename':          SOURCELOWER_TAR_GZ,
                         'source_urls':       [('https://github.com/libarchive/libarchive/archive')]
                     }],
        'start_dir': '%(namelower)s-%(version)s',
    }),
#
# Graphics file formats
#
    ('JasPer', JasPer_version, { 
        'easyblock':   'CMakeMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['http://www.ece.uvic.ca/~frodo/jasper/software/']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'preconfigopts': 'cd %(builddir)s/%(namelower)s-%(version)s ; ',
        'configopts':  '-DJAS_ENABLE_DOC=OFF -DALLOW_IN_SOURCE_BUILD=ON ',
        'prebuildopts': 'cd %(builddir)s/%(namelower)s-%(version)s ; ',
    }),
     ('libjpeg-turbo', libjpegturbo_version, {
        'easyblock':   'CMakeMake',
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [SOURCEFORGE_SOURCE]
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-jpeg8',
     }),
    ('libpng', libpng_version, { # Needs zlib!
        # https://download.sourceforge.net/libpng/libpng-1.6.36.tar.xz
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': ['https://download.sourceforge.net/libpng']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'preconfigopts': 'CPATH=%(installdir)s/include:$CPATH LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH LDFLAGS="-L%(installdir)s/lib $LDFLAGS"',
        'configopts':  '--with-pic',
        'postinstallcmds':  ['ln -s %(installdir)s/include/libpng16 %(installdir)s/include/libpng']
    }),
    ('LibTIFF', libtiff_version, {
        'sources':     [ {
                          'filename':    'tiff-%(version)s.tar.gz',
                          'source_urls': ['https://download.osgeo.org/libtiff/']
                       }],
        'start_dir':   'tiff-%(version)s'
    }),
#
# Audio and video file formats
#
    ('x264', x264_version, {
        'sources':     [ {
                          'filename':    'x264-snapshot-%(version)s-stable.tar.bz2',
                          'source_urls': ['https://download.videolan.org/pub/videolan/x264/snapshots/', 'ftp://ftp.videolan.org/pub/videolan/x264/snapshots/']
                       }],
        'start_dir':   'x264-snapshot-%(version)s-stable',
        'configopts': '--enable-shared --enable-static',
        'installopts': ' && mkdir -p %(installdir)s/doc && cp -r doc/* %(installdir)s/doc'
    }),
    ('x265', x265_version, {
        'easyblock':   'CMakeMake',
        'sources':     [ {
                          'filename':    '%(name)s_%(version)s.tar.gz',
                          'source_urls': ['http://ftp.videolan.org/pub/videolan/x265/', 'http://download.videolan.org/pub/videolan/x265/']
                       }],
        'start_dir':   '%(namelower)s_%(version)s/source',
    }),
    ('LAME', LAME_version, { # Needs ncurses!
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['https://sourceforge.net/projects/lame/files/lame/%(version_major_minor)s/']
                       }],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': 'CPATH=%(installdir)s/include:$CPATH LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH LDFLAGS="-L%(installdir)s/lib $LDFLAGS" FRONTEND_LDADD="-L%(installdir)s/lib" ',
    }),
#
# Network and XML
#
    ( 'cURL', cURL_version, { # USES zlib
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': ['https://curl.haxx.se/download/']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-zlib=%(installdir)s', 
    }),
    ('expat', expat_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_BZ2,
                          'source_urls': [SOURCEFORGE_SOURCE]
                       }],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('libxml2', libxml2_version, { # Needs zlib. The configure also looks for XZ utilities (liblzma), but that depends on gettext which depends on libxml2...
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['http://xmlsoft.org/sources/','http://xmlsoft.org/sources/old/']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-pic --with-zlib=%(installdir)s --with-lzma=%(installdir)s --without-python',
    }),
    ('libxslt', libxslt_version, { # Needs libxml2 and can find it through pkg-config, so configure that path.
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['http://xmlsoft.org/sources/','http://xmlsoft.org/sources/old/']
                       }],
        'start_dir':   '%(namelower)s-%(version)s',
        'preconfigopts': 'PKG_CONFIG_PATH=%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig:$PKG_CONFIG_PATH ',
        'configopts':  '--with-pic --without-python',
    }),
#
# Regular math libs
#
    ('GSL', GSL_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       }],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('libcerf', libcerf_version, {
        'easyblock':   'CMakeMake',
        # https://jugit.fz-juelich.de/mlz/libcerf/-/archive/v1.13/libcerf-v1.13.tar.bz2
        # The problem with this link is that whatever .tar.gz file you request to it, it will
        # produce a file with that name and a version of libcerf into it, so we try to isolate 
        # it.
        'sources':     [ {
                          'filename':    '%(namelower)s-v%(version)s.tar.bz2',
                          'source_urls': ['https://jugit.fz-juelich.de/mlz/libcerf/-/archive/v' + libcerf_version]
                       }],
        #'sources':     [ '%(namelower)s-v%(version)s.tar.bz2' ],
        #'source_urls': [ 'https://jugit.fz-juelich.de/mlz/libcerf/-/archive/v' + libcerf_version ],
        'separate_build_dir': True,
        'start_dir':   '%(namelower)s-v%(version)s',
    }),
#
# Arbitrary precision math
#
    ('GMP', GMP_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--enable-cxx'
    }),
    ('MPFR', MPFR_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-gmp=%(installdir)s'
    }),
    ('MPC', MPC_version, {
         'sources':    [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--with-gmp=%(installdir)s --with-mpfr=%(installdir)s'
    }),
#
# Miscellaneous
#
    ('file', file_version, {
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': ['ftp://ftp.astron.com/pub/file/']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('FriBidi', fribidi_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_BZ2,
                          'source_urls': ['https://github.com/%(namelower)s/%(namelower)s/releases/download/v%(version)s']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--disable-docs',
    }),
    ('gc', gc_version, {
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': ['http://hboehm.info/gc/gc_source/']
                       }, {
                          'filename':    'libatomic_ops-7_4_4.tar.gz',
                          'source_urls': ['https://github.com/ivmai/libatomic_ops/archive/'],
                          'extract_cmd': 'mkdir -p %(name)s-%(version)s/libatomic_ops ; tar -xf %s -C %(name)s-%(version)s/libatomic_ops --strip-components=1'
                       } ],
        'start_dir':     '%(name)s-%(version)s',
        'preconfigopts': "ln -s %(builddir)s/libatomic_ops*/ libatomic_ops && ",
        'configopts':    '--enable-threads=posix',
    }),
    ('libffi', libffi_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['ftp://sourceware.org/pub/libffi/', 'http://www.mirrorservice.org/sites/sourceware.org/pub/libffi/']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('libiconv', libiconv_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s'
    }),
    ('libunistring', libunistring_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'parallel':    1
    }),
    ('libyaml', libyaml_version, {
        'sources':     [ {
                          'filename':    'yaml-%(version)s.tar.gz',
                          'source_urls': ['http://pyyaml.org/download/libyaml/']
                       } ],
#        Depending on how the download is done or what download site is used, the configure script may not be included.
#        In that case, the bootstrap script can be used to generate it.
#        'preconfigopts': './bootstrap && ',
        'start_dir':     'yaml-%(version)s'
    }),
    ('PCRE', PCRE_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_BZ2,
                          'source_urls': ['https://ftp.pcre.org/pub/pcre/']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  "--with-pic --disable-cpp --enable-utf --enable-unicode-properties"
    }),
    ('UDUNITS', UDUNITS_version, { # depends on expat!
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_GZ,
                          'source_urls': ['ftp://ftp.unidata.ucar.edu/pub/udunits']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
    }),
    ('util-linux', util_version, { # Needs ncurses and zlib
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': ['http://www.kernel.org/pub/linux/utils/util-linux/v' + util_major_minor]
                       } ],
        'configopts':  "--disable-chfn-chsh --disable-login --disable-su --disable-rfkill " +
                       "--disable-wall --disable-use-tty-group " +
                       "--disable-makeinstall-chown --disable-makeinstall-setuid " +
                       "--with-systemdsystemunitdir='${prefix}/systemd' " +
                       "--with-bashcompletiondir='${prefix}/share/bash-completion/completions' " +
                       "--without-python ",
        'start_dir':   '%(namelower)s-%(version)s'
    }),
#
# Graphics
#
    ('pixman', pixman_version, {
        'sources':     [ {
                          'filename':    SOURCE_TAR_GZ,
                          'source_urls': ['http://cairographics.org/releases']
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
    }),
    ('freetype', freetype_version, { # Needs zlib, bzip2 and libpng
        'sources':     [ {
                          'filename':    SOURCE_TAR_XZ,
                          'source_urls': [GNU_SAVANNAH_SOURCE]
                       } ],
        'start_dir':   '%(namelower)s-%(version)s',
        'configopts':  '--enable-freetype-config --with-harfbuzz=no',
    }),
    ('fontconfig', fontconfig_version, { # Needs pkg-config and gperf (buildtools) and expat, freetype and util-linux.
        'sources':     [ {
                          'filename':    SOURCE_TAR_BZ2,
                          'source_urls': ['http://www.freedesktop.org/software/fontconfig/release/']
                       } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': 'PKG_CONFIG_PATH=%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig:$PKG_CONFIG_PATH ',
        'configopts':    '--disable-docs',
    }),
#
# The following packages have a lot of dependencies and therefore come at the end rather than
# with packages with similar function.
#
    ('gettext', gettext_version, { # Needs libxml2, ncurses, libunistring.
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_XZ,
                          'source_urls': [GNU_SOURCE]
                       } ],
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': 'PKG_CONFIG_PATH=%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig:$PKG_CONFIG_PATH ' + \
                         'CPATH=%(installdir)s/include:$CPATH ' + \
                         'LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH ' + \
                         'LIBRARY_PATH=%(installdir)s/lib:$LIBRARY_PATH ',
        'configopts':    '--without-emacs --with-libxml2-prefix=%(installdir)s --with-libncurses-prefix=%(installdir)si --with-libunistring-prefix=%(installdir)s --with-libiconv-prefix=%(installdir)s',
    }),
#
# Recompile XZ utils now with all features enabled.
#
    ('XZ', XZ_version, {
        'sources':     [ {
                          'filename':    SOURCELOWER_TAR_BZ2,
                          'source_urls': ['http://tukaani.org/xz/']
                       } ],
#        'patches':       ['XZ-5.2.2_compat-libs.patch'], # Can't apply the patch a second time.
        'start_dir':     '%(namelower)s-%(version)s',
        'preconfigopts': 'make mostlyclean clean distclean ; '+ \
                         'PKG_CONFIG_PATH=%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig:$PKG_CONFIG_PATH ' + \
                         'CPATH=%(installdir)s/include:$CPATH ' + \
                         'LD_LIBRARY_PATH=%(installdir)s/lib:$LD_LIBRARY_PATH ' + \
                         'LIBRARY_PATH=%(installdir)s/lib:$LIBRARY_PATH ',
        'configopts':    '--with-libiconv-prefix=%(installdir)s',
    }),
]

sanity_check_paths = {
    'files': [],
    'dirs': ['include']
}

modextravars = {
    'CURL_INCLUDES': '%(installdir)s/include'
}

moduleclass = 'lib'

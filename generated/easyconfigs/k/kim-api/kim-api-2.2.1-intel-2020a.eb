easyblock = 'CMakeMake'

local_buildset =         '2020a'

local_kimapi_version =         '2.2.1'           # https://openkim.org/doc/usage/obtaining-models/#installing_api

name =    'kim-api'
version = local_kimapi_version

homepage = 'https://openkim.org/'

whatis = [
    'Description: kim-api is the API for the open knowledgebase of interatomic models'
]

description = """
Open Knowledgebase of Interatomic Models.

KIM is an API and OpenKIM is a collection of interatomic models (potentials) for
atomistic simulations.  This is a library that can be used by simulation programs
to get access to the models in the OpenKIM database.

This module only contains the API. At UAntwerp, we currently have no central
installation of the openkim-models package. Contact HPC support if you think that
could be useful (i.e., used by multiple users) and if you can help figuring out
what would be a suitable configuration.

The user can install them manually by running
    kim-api-collections-management install user MODELNAME
or
    kim-api-collections-management install user OpenKIM
to install them all.
"""

toolchain = {'name': 'intel', 'version': local_buildset}

source_urls = ['https://s3.openkim.org/kim-api/']
sources =     ['%(name)s-%(version)s.txz']
checksums =   ['1d5a12928f7e885ebe74759222091e48a7e46f77e98d9147e26638c955efbc8e']

# Note that CMake is also needed to install models so we had no other choice than to
# put buildtools into dependencies...
dependencies = [
    ('buildtools', local_buildset,         '', True),  # Guarantees recent versions of CMake and pkg-config
]

parallel = 1
separate_build_dir = True
build_type = 'Release'

modextravars = {
    'KIM_API_CMAKE_PREFIX_DIR': '%(installdir)s/lib64'
}

sanity_check_paths = {
    'files': ['bin/kim-api-collections-management', 'lib64/libkim-api.%s' % SHLIB_EXT],
    'dirs':  []
}

moduleclass = 'chem'

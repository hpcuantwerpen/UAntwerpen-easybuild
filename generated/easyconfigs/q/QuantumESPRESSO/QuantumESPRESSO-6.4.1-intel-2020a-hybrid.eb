# NOTE: The QuantumESPRESSO EasyBlock of EasyBuild 4.2.2 contains a bug in the sanity check
# for the d3q plugin. The list of binaries is not correct. Our own EasyBlock corrects this
# and is directly derived from the EasyBuild 4.2.2. one.
#
easyblock = 'EB_QuantumESPRESSO_UA_EB42'

local_buildset =         '2020a'
local_gcc_version =      '9.3.0'

local_QuantumESPRESSO_version = '6.4.1' # https://gitlab.com/QEF/q-e/-/tags
local_wannier90_version = '3.0.0'
local_d3q_version = '1.1.5' # See https://sourceforge.net/projects/d3q/

local_FFTW_version =           '3.3.8'           # http://www.fftw.org/
local_HDF5_version =           '1.12.0'          # https://support.hdfgroup.org/HDF5/
local_HDF5_retro_version =     '1.10.6'          # https://support.hdfgroup.org/HDF5/
# Probably needs a non-standard ELPA!
local_ELPA_version =           '2019.11.001'     #
local_libxc_version =          '4.3.4'           # https://www.tddft.org/programs/libxc/download/

import os as local_os
local_UAcluster = local_os.environ['VSC_INSTITUTE_CLUSTER']

name =          'QuantumESPRESSO'
version =       local_QuantumESPRESSO_version
versionsuffix = '-hybrid'

homepage = 'https://www.quantum-espresso.org/'
whatis = [
    "Description: Quantum ESPRESSO, an integrated suite for electronic-structure calculations based on DFT, plane waves and pseudopotentials",
    'Version:     %(version)s hybrid MPI/OpenMP executables',
]

description = """
Quantum ESPRESSO  is an integrated suite of computer codes for
electronic-structure calculations and materials modeling at the nanoscale.  It
is based on density-functional theory, plane waves, and pseudopotentials (both
norm-conserving and ultrasoft).

This module contains hybrid OpenMP/MPI executables, so you'll need to set
OPENMP_NUM_THREADS to the appropriate value. See chapter 3 of the user guide
for information on parallelism in QuantumESPRESSO.

Installed plugins:
* QE-GIPAW %(version)s
* wannier90 %(wv)s
* d3q %(d3qv)s (included with QuantumESPRESSO)

Other plugins supported in some of the other QuantumESPRESSO modules are 
supported by this module:
* WANT, West, Yambo and PLUMED do not compile 
""" % { 'version': version, 'wv': local_wannier90_version, 'd3qv': local_d3q_version }

toolchain =     {'name': 'intel', 'version': local_buildset}
toolchainopts = {'usempi': True, 'openmp': True}

local_QE_release = '.'.join(local_QuantumESPRESSO_version.split('.')[:2])

# major part of this list was determined from espresso/install/plugins_list
sources = [
    { 
      'filename':    'qe-%(version)s_release_pack.tgz',
      'source_urls': ['https://github.com/QEF/q-e/releases/download/qe-%(version)s/'] 
    },
    
    # d3q: https://sourceforge.net/projects/d3q/files/QE_6.4/d3q-1.1.5-qe6.4.tgz/download
    {
      'filename':    'd3q-' + local_d3q_version + '-qe' + local_QE_release + '.tgz',
      'source_urls': [('https://sourceforge.net/projects/d3q/files/QE_' + local_QE_release, '/download')]
    },

    # QE-GIPAW
    { 
      'filename':          'qe-gipaw-%(version)s.tar.gz',
      'download_filename': '%(version)s.tar.gz',
      'source_urls':       ['https://github.com/dceresoli/qe-gipaw/archive/'] 
    },

    # Wannier
    { 
      'filename':          'wannier90-%(wv)s.tar.gz' % {'wv': local_wannier90_version}, 
      'download_filename': 'v%(wv)s.tar.gz'          % {'wv': local_wannier90_version},
      'source_urls':       ['https://github.com/wannier-developers/wannier90/archive/'] 
    },
]
source_urls = [ ]

# patchfile backports downloaded from QE's github site; manually replace a/ and b/ by real path
#patches = [
##    '%(name)s-%(version)s_drop_LIBS_before_configure_of_fox.patch',
#    'backports-%(version)s.git-diff',
##    'QuantumESPRESSO-5.4.0_yambo-fixes.patch',
#]
patches = [('backports-%(version)s.git-diff', 'qe-%(version)s')]
checksums = [
    'a9b19cf620656d89a83c1abdf87fbfd66a7d011e6153fa6db2dc207bf25f138a',  # qe-6.4.1_release_pack.tgz
    'eb2d2eccc1b25d25817d5083e08ee0f8211cb0a4c1e2a0ffcab7b155c6d0b1a7',  # d3q-1.1.5-qe6.4.tgz
    'e8aae92b4b300a6e5ecbe1ade14a95d623c8ed00947aec482dd1b32893342fe0',  # qe-gipaw-6.4.1.tar.gz
    'f196e441dcd7b67159a1d09d2d7de2893b011a9f03aab6b30c4703ecbf20fe5b',  # wannier90-3.0.0.tar.gz
    'c2bf4abdf3c1744652290cd176bc23feb5084cc9acc0eb2d07e11f43cc2c205b',  # backports-6.4.1.git-diff
]

dependencies = [
    ('FFTW',  local_FFTW_version),               # The Intel FFTW interface lacks .f03 header files that are needed.
    ('HDF5',  local_HDF5_retro_version, '-MPI'), # 1.8 which we have in this toolchain did not work.
    ('ELPA',  local_ELPA_version),               # Taken from recent UGhent EasyConfigs
    ('libxc', local_libxc_version),              # Taken from recent UGhent EasyConfigs
]

if local_UAcluster == 'vaughan':
    preconfigopts='export CFLAGS="-march=core-avx2 -mtune=core-avx2" && export FFLAGS="-march=core-avx2 -mtune=core-avx2" && '
    dependencies = [ ('MKL-overlay', '2018.04', '', True )]

hybrid = True

# add plumed and uncomment the lines in sources and checksums if the package is downloaded manually
buildopts = 'all gwl xspectra couple epw gipaw w90 d3q'

# parallel build tends to fail
parallel = 1

# Save the make.inc file for future reference.
postinstallcmds = [
    'mkdir -p %(installdir)s/easybuild',
    'cp %(builddir)s/qe-%(version)s/make.inc %(installdir)s/easybuild',
]

moduleclass = 'chem'

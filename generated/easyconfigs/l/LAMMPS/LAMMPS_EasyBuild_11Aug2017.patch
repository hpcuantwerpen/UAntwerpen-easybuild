# This patch file add a number of Makefiles that work together well with the EasyBuild approach of defining compilers.
--- /dev/null	2018-01-15 00:28:43.157999681 +0100
+++ lammps-stable_11Aug2017/lib/colvars/Makefile.EasyBuild	2018-01-24 14:44:51.851731000 +0100
@@ -0,0 +1,25 @@
+# -*- makefile -*- to build Colvars module with GNU compiler
+
+EXTRAMAKE = Makefile.lammps.EasyBuild
+
+COLVARS_LIB = libcolvars.a
+COLVARS_OBJ_DIR =
+
+# Needed from the environment:
+#
+# CXX 
+# CXXFLAGS
+AR =		ar
+ARFLAGS =	-rscv
+SHELL =		/bin/sh
+
+.PHONY: default clean
+
+default: $(COLVARS_LIB) 
+	-cp $(EXTRAMAKE) Makefile.lammps
+
+include Makefile.common
+
+clean:
+	-rm -f $(COLVARS_OBJS) $(COLVARS_LIB)
+
--- /dev/null	2018-01-15 00:28:43.157999681 +0100
+++ lammps-stable_11Aug2017/lib/colvars/Makefile.lammps.EasyBuild	2018-01-24 14:42:00.735259000 +0100
@@ -0,0 +1,6 @@
+# Settings that the LAMMPS build will import when this package library is used
+# Modification: Make it possible to import these variables from the environment.
+
+colvars_SYSINC ?=
+colvars_SYSLIB ?=
+colvars_SYSPATH ?=
--- /dev/null	2018-01-15 00:28:43.157999681 +0100
+++ lammps-stable_11Aug2017/lib/reax/Makefile.EasyBuild	2018-01-24 14:49:49.334466000 +0100
@@ -0,0 +1,51 @@
+# *
+# *_________________________________________________________________________*
+# *      Fortran Library for Reactive Force Field                           *
+# *      DESCRIPTION: SEE READ-ME                                           *
+# *      FILE NAME: Makefile                                                *
+# *      CONTRIBUTING AUTHORS: Hansohl Cho(MIT), Aidan Thompson(SNL)        *
+# *                            and Greg Wagner(SNL)                         * 
+# *      CONTACT: hansohl@mit.edu, athompson@sandia.gov, gjwagne@sandia.gov *
+# *_________________________________________________________________________*/
+
+SHELL = /bin/sh
+
+# which file will be copied to Makefile.lammps
+
+EXTRAMAKE = Makefile.lammps.EasyBuild
+
+# ------ SETTINGS ------
+
+#F90 =           ifort
+#F90FLAGS =      -O -fPIC
+ARCHIVE =	ar
+ARCHFLAG =	-rc
+USRLIB =
+SYSLIB =
+
+# ------ FILES ------
+
+SRC = reax_connect.F reax_inout.F reax_lammps.F reax_poten.F reax_reac.F reax_charges.F
+
+HEADERFILES = reax_defs.h *.blk 
+
+# ------ DEFINITIONS ------
+
+LIB = libreax.a
+OBJ =   $(SRC:.F=.o)
+
+# ------ MAKE PROCEDURE ------
+
+lib: 	$(OBJ)
+	$(ARCHIVE) $(ARFLAGS) $(LIB) $(OBJ)
+	@cp $(EXTRAMAKE) Makefile.lammps
+
+# ------ COMPILE RULES ------
+
+%.o:%.F $(HEADERFILES)
+	$(F90) $(F90FLAGS) -c $<
+
+# ------ CLEAN ------
+
+clean:
+	-rm *.o $(LIB)
--- /dev/null	2018-01-15 00:28:43.157999681 +0100
+++ lammps-stable_11Aug2017/lib/reax/Makefile.lammps.EasyBuild	2018-01-24 14:47:18.257015000 +0100
@@ -0,0 +1,7 @@
+# Settings that the LAMMPS build will import when this package library is used
+# Modification: Make it possible to overwrite the variables with values from the
+# environment.
+
+reax_SYSINC ?=
+reax_SYSLIB ?= 
+reax_SYSPATH ?=
--- /dev/null	2018-01-15 00:28:43.157999681 +0100
+++ lammps-stable_11Aug2017/lib/voronoi/Makefile.EasyBuild	2018-01-24 14:58:02.613729000 +0100
@@ -0,0 +1,8 @@
+# Dummy Makefile for consistency with the structure of the other lib subdires.
+# Its only function is to install the Makefile.lammps file
+
+EXTRAMAKE = Makefile.lammps.EasyBuild
+
+default :
+	-cp $(EXTRAMAKE) Makefile.lammps
+
--- /dev/null	2018-01-15 00:28:43.157999681 +0100
+++ lammps-stable_11Aug2017/lib/voronoi/Makefile.lammps.EasyBuild	2018-01-26 16:50:55.262714000 +0100
@@ -0,0 +1,6 @@
+# Settings that the LAMMPS build will import when this package library is used
+# Modification: Already included what is needed for a regular EasyBuild build.
+
+voronoi_SYSINC  ?= $(EBROOTVOROPLUSPLUS)/include/voro++
+voronoi_SYSLIB  ?= -lvoro++
+voronoi_SYSPATH ?= -L$(EBROOTVOROPLUSPLUS)/lib
--- /dev/null	2018-01-15 00:28:43.157999681 +0100
+++ lammps-stable_11Aug2017/src/MAKE/MINE/Makefile.mpi	2018-01-26 16:26:45.038201000 +0100
@@ -0,0 +1,115 @@
+# MINE mpi: MPI-build, passing compiler settings through environment variables the EasyBuild way
+# The default settings are (except for the compiler name) OK for Intel compilers/MPI
+
+SHELL = /bin/sh
+
+# ---------------------------------------------------------------------
+# compiler/linker settings
+# specify flags and libraries needed for your compiler
+
+CC ?=		$(MPICXX)
+CCFLAGS ?=	-O3 -fno-alias -ip -unroll0 -restrict
+SHFLAGS ?=	-fPIC
+DEPFLAGS ?=	-M
+
+LINK ?=		$(CC)
+LINKFLAGS ?=	
+LIB ?=          -lstdc++ -mkl=cluster
+SIZE ?=		size
+
+ARCHIVE ?=	ar
+ARFLAGS ?=	-rc
+SHLIBFLAGS ?=	-shared
+
+# ---------------------------------------------------------------------
+# LAMMPS-specific settings, all OPTIONAL
+# specify settings for LAMMPS features you will use
+# if you change any -D setting, do full re-compile after "make clean"
+
+# LAMMPS ifdef settings
+# see possible settings in Section 2.2 (step 4) of manual
+
+LMP_INC ?=	-DLAMMPS_GZIP -DLAMMPS_MEMALIGN=64
+
+# MPI library
+# see discussion in Section 2.2 (step 5) of manual
+# MPI wrapper compiler/linker can provide this info
+# can point to dummy MPI library in src/STUBS as in Makefile.serial
+# use -D MPICH and OMPI settings in INC to avoid C++ lib conflicts
+# INC = path for mpi.h, MPI compiler settings
+# PATH = path for MPI library
+# LIB = name of MPI library
+
+MPI_INC ?=       -DMPICH_SKIP_MPICXX -DOMPI_SKIP_MPICXX=1
+MPI_PATH ?= 
+MPI_LIB ?=	
+
+# FFT library
+# see discussion in Section 2.2 (step 6) of manual
+# can be left blank to use provided KISS FFT library
+# INC = -DFFT setting, e.g. -DFFT_FFTW, FFT compiler settings
+# PATH = path for FFT library
+# LIB = name of FFT library
+
+FFT_INC ?=    	
+FFT_PATH ?= 
+FFT_LIB ?=	
+
+# JPEG and/or PNG library
+# see discussion in Section 2.2 (step 7) of manual
+# only needed if -DLAMMPS_JPEG or -DLAMMPS_PNG listed with LMP_INC
+# INC = path(s) for jpeglib.h and/or png.h
+# PATH = path(s) for JPEG library and/or PNG library
+# LIB = name(s) of JPEG library and/or PNG library
+
+JPG_INC ?=       
+JPG_PATH ?= 	
+JPG_LIB ?=	
+
+# ---------------------------------------------------------------------
+# build rules and dependencies
+# do not edit this section
+
+include	Makefile.package.settings
+include	Makefile.package
+
+EXTRA_INC = $(LMP_INC) $(PKG_INC) $(MPI_INC) $(FFT_INC) $(JPG_INC) $(PKG_SYSINC)
+EXTRA_PATH = $(PKG_PATH) $(MPI_PATH) $(FFT_PATH) $(JPG_PATH) $(PKG_SYSPATH)
+EXTRA_LIB = $(PKG_LIB) $(MPI_LIB) $(FFT_LIB) $(JPG_LIB) $(PKG_SYSLIB)
+EXTRA_CPP_DEPENDS = $(PKG_CPP_DEPENDS)
+EXTRA_LINK_DEPENDS = $(PKG_LINK_DEPENDS)
+
+# Path to src files
+
+vpath %.cpp ..
+vpath %.h ..
+
+# Link target
+
+$(EXE):	$(OBJ) $(EXTRA_LINK_DEPENDS)
+	$(LINK) $(LINKFLAGS) $(EXTRA_PATH) $(OBJ) $(EXTRA_LIB) $(LIB) -o $(EXE)
+	$(SIZE) $(EXE)
+
+# Library targets
+
+lib:	$(OBJ) $(EXTRA_LINK_DEPENDS)
+	$(ARCHIVE) $(ARFLAGS) $(EXE) $(OBJ)
+
+shlib:	$(OBJ) $(EXTRA_LINK_DEPENDS)
+	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o $(EXE) \
+        $(OBJ) $(EXTRA_LIB) $(LIB)
+
+# Compilation rules
+
+%.o:%.cpp
+	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<
+
+# Individual dependencies
+
+depend : fastdep.exe $(SRC)
+	@./fastdep.exe $(EXTRA_INC) -- $^ > .depend || exit 1
+
+fastdep.exe: ../DEPEND/fastdep.c
+	cc -O -o $@ $<
+
+sinclude .depend
--- /dev/null	2018-01-15 00:28:43.157999681 +0100
+++ lammps-stable_11Aug2017/src/MAKE/MINE/Makefile.serial	2018-01-26 16:25:41.131564000 +0100
@@ -0,0 +1,115 @@
+# MINE serial: Get the compilers from EasyBuild through environment variables.
+# Most options OK for serial computation with icc.
+
+SHELL = /bin/sh
+
+# ---------------------------------------------------------------------
+# compiler/linker settings
+# specify flags and libraries needed for your compiler
+
+CC ?=		$(CXX)
+CCFLAGS ?=	-O3 -fno-alias -ip -unroll0 -restrict
+SHFLAGS ?=	-fPIC
+DEPFLAGS ?=	-M
+
+LINK =		$(CC)
+LINKFLAGS =	-O
+LIB =           -lstdc++ -mkl=sequential
+SIZE =		size
+
+ARCHIVE =	ar
+ARFLAGS =	-rc
+SHLIBFLAGS =	-shared
+
+# ---------------------------------------------------------------------
+# LAMMPS-specific settings, all OPTIONAL
+# specify settings for LAMMPS features you will use
+# if you change any -D setting, do full re-compile after "make clean"
+
+# LAMMPS ifdef settings
+# see possible settings in Section 2.2 (step 4) of manual
+
+LMP_INC ?=	-DLAMMPS_GZIP -DLAMMPS_MEMALIGN=64
+
+# MPI library
+# see discussion in Section 2.2 (step 5) of manual
+# MPI wrapper compiler/linker can provide this info
+# can point to dummy MPI library in src/STUBS as in Makefile.serial
+# use -D MPICH and OMPI settings in INC to avoid C++ lib conflicts
+# INC = path for mpi.h, MPI compiler settings
+# PATH = path for MPI library
+# LIB = name of MPI library
+
+MPI_INC =       -I../STUBS 
+MPI_PATH =      -L../STUBS
+MPI_LIB =	-lmpi_stubs
+
+# FFT library
+# see discussion in Section 2.2 (step 6) of manual
+# can be left blank to use provided KISS FFT library
+# INC = -DFFT setting, e.g. -DFFT_FFTW, FFT compiler settings
+# PATH = path for FFT library
+# LIB = name of FFT library
+
+FFT_INC ?=    	
+FFT_PATH ?= 
+FFT_LIB ?=	
+
+# JPEG and/or PNG library
+# see discussion in Section 2.2 (step 7) of manual
+# only needed if -DLAMMPS_JPEG or -DLAMMPS_PNG listed with LMP_INC
+# INC = path(s) for jpeglib.h and/or png.h
+# PATH = path(s) for JPEG library and/or PNG library
+# LIB = name(s) of JPEG library and/or PNG library
+
+JPG_INC ?=       
+JPG_PATH ?= 	
+JPG_LIB ?=	
+
+# ---------------------------------------------------------------------
+# build rules and dependencies
+# do not edit this section
+
+include	Makefile.package.settings
+include	Makefile.package
+
+EXTRA_INC = $(LMP_INC) $(PKG_INC) $(MPI_INC) $(FFT_INC) $(JPG_INC) $(PKG_SYSINC)
+EXTRA_PATH = $(PKG_PATH) $(MPI_PATH) $(FFT_PATH) $(JPG_PATH) $(PKG_SYSPATH)
+EXTRA_LIB = $(PKG_LIB) $(MPI_LIB) $(FFT_LIB) $(JPG_LIB) $(PKG_SYSLIB)
+EXTRA_CPP_DEPENDS = $(PKG_CPP_DEPENDS)
+EXTRA_LINK_DEPENDS = $(PKG_LINK_DEPENDS)
+
+# Path to src files
+
+vpath %.cpp ..
+vpath %.h ..
+
+# Link target
+
+$(EXE):	$(OBJ) $(EXTRA_LINK_DEPENDS)
+	$(LINK) $(LINKFLAGS) $(EXTRA_PATH) $(OBJ) $(EXTRA_LIB) $(LIB) -o $(EXE)
+	$(SIZE) $(EXE)
+
+# Library targets
+
+lib:	$(OBJ) $(EXTRA_LINK_DEPENDS)
+	$(ARCHIVE) $(ARFLAGS) $(EXE) $(OBJ)
+
+shlib:	$(OBJ) $(EXTRA_LINK_DEPENDS)
+	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o $(EXE) \
+        $(OBJ) $(EXTRA_LIB) $(LIB)
+
+# Compilation rules
+
+%.o:%.cpp
+	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<
+
+# Individual dependencies
+
+depend : fastdep.exe $(SRC)
+	@./fastdep.exe $(EXTRA_INC) -- $^ > .depend || exit 1
+
+fastdep.exe: ../DEPEND/fastdep.c
+	cc -O -o $@ $<
+
+sinclude .depend

easyblock = 'Bundle'

name          = 'TensorFlow'
version       = '1.14.0'
local_pyver   = '3.6.8'

local_tensorboard_version = version
local_keras_version  =      '2.3.1'

versionsuffix = '-CPU-Python-' + local_pyver + '-keras-' + local_keras_version

homepage = 'https://www.tensorflow.org/'

whatis = [
    "Description: Tensorflow is an open-source library for machine intelligence",
    "This module provides the GPU-accelerated libraries downloaded as a package from Google, so works on the GPU nodes only"
]

description = """
An open-source software library for Machine Intelligence.

This module contains binaries optimized for Intel processors (and compatible
CPUs) based on work done by Intel (essentially by using the Intel
MKL-DNN libraries).

Tensorflow doesn't compile properly with our compilers. Blame Google for a
lousy build process with tools that lack the transparancy needed to easily
solve build problems. Hence we use precompiled binaries, but we cannot
exclude compatibility problems with our OS version.
"""

toolchain = {'name': 'intel', 'version': '2018b'}

local_pycpver    = ''.join(local_pyver.split('.')[:2])
local_pyvermajor = ''.join(local_pyver.split('.')[:1])

# this is a bundle of Python packages
exts_defaultclass = 'PythonPackage'

dependencies = [
    ('Python',   local_pyver),
    ('protobuf', '3.7.1',            '-Python-' + local_pyver),
]

exts_list = [
    ('wrapt', '1.11.2', {
        'source_urls': ['https://pypi.python.org/packages/source/w/wrapt'],
    }),
    ('astor', '0.8.0', {
        'source_urls': ['https://pypi.python.org/packages/source/a/astor'],
    }),
    ('grpcio', '1.24.3', {
        'source_urls': ['https://pypi.python.org/packages/source/g/grpcio'],
        'modulename':  'grpc',
    }),
    ('Keras-Applications', '1.0.8', {
        'source_urls': ['https://pypi.python.org/packages/source/K/Keras-Applications'],
        'source_tmpl': 'Keras_Applications-%(version)s.tar.gz',
#        'modulename':  'keras_applications', 
    }),
    ('Keras-Preprocessing', '1.1.0', {
        'source_urls': ['https://pypi.python.org/packages/source/K/Keras-Preprocessing'],
        'source_tmpl': 'Keras_Preprocessing-%(version)s.tar.gz',
#        'modulename':  'keras_preprocessing', 
    }),
    ('tensorflow', version, {
        'source_urls':    ['https://pypi.python.org/packages/source/t/tensorflow'],
        'source_tmpl':    'tensorflow-%%(version)s-cp%(local_pycpver)s-cp%(local_pycpver)sm-manylinux1_x86_64.whl' % {'local_pycpver': local_pycpver},
        'use_pip':        True,
        'unpack_sources': False,
    }),
    ('tensorboard', local_tensorboard_version, {
        'source_urls':    ['https://pypi.python.org/packages/source/t/tensorboard'],
        'source_tmpl':    'tensorboard-%%(version)s-py%(local_pyvermajor)s-none-any.whl' % {'local_pyvermajor': local_pyvermajor},
        'use_pip':        True,
        'unpack_sources': False,
    }),
    ('Keras', local_keras_version, {
        'source_urls': ['https://pypi.python.org/packages/source/K/Keras'],
    }),
    ('keras-metrics', '1.1.0', { # Dependency of tensorflow
        'source_urls': ['https://pypi.python.org/packages/source/k/keras-metrics'],
    }),
]

# specify that Bundle easyblock should run a full sanity check, rather than just trying to load the module
full_sanity_check = True

sanity_check_paths = {
    'files': ['bin/tensorboard'],
    'dirs':  ['lib/python%(pyshortver)s/site-packages'],
}

modextrapaths = {'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages']}

moduleclass = 'lib'

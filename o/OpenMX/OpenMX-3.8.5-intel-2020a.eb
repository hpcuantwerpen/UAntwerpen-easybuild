# IMPORTANT NOTE:
# This EasyConfig requires a specially prepared source file, build by adding
# the necessary patch file to the main distribution file, then retarring in
# a file openmx%(versio)s.tar.gz (e.g., openmx3.8.3.tar.g) that is stored in
# a place where EasyBuild can find it. 
#
easyblock = 'MakeCp'

local_buildset =         '2020a'

name =    'OpenMX'
version = '3.8.5'
local_patch_date = '18June12' # YYmmmmDD
local_version_major_minor = '.'.join(version.split('.')[:2])

homepage = 'http://www.openmx-square.org/'

whatis = [
    "Description: OpenMX - Open source package for Material eXplorer"
]


description = """
OpenMX (Open source package for Material eXplorer) is a software package for 
nano-scale material simulations based on density functional theories (DFT), 
norm-conserving pseudopotentials, and pseudo-atomic localized basis functions. 

This version is compiled with MPI and OpenMP.

Usefull directories:
  * $EBROOTOPENMX/DFT_DATA13 with all the data files.
  * $EBROOTOPENMX/doc contains a copy of the manual
  * $EBROOTOPENMX/examples is a copy of the `work` subdirectory with several
    examples and test cases included with the OpenMX distribution.
"""

docurls = [
    'Web-based documentation: http://www.openmx-square.org/openmx_man' + local_version_major_minor + '/openmx.html'
]

toolchain =     {'name': 'intel', 'version': local_buildset}
toolchainopts = {'pic': False, 'openmp': True, 'usempi': True}

# http://t-ozaki.issp.u-tokyo.ac.jp/openmx3.8.tar.gz
# http://www.openmx-square.org/bugfixed/18June12/patch3.8.5.tar.gz
source_urls = [homepage]
sources =     [
    { 
        'filename':    'openmx' + local_version_major_minor + '.tar.gz', 
        'source_urls': ['http://t-ozaki.issp.u-tokyo.ac.jp']
    },
    {
        'filename':    'patch%(version)s.tar.gz',
        'source_urls': ['http://www.openmx-square.org/bugfixed/' + local_patch_date],
        'extract_cmd': 'cd openmx' + local_version_major_minor + '/source; tar xzf %s'
    }
]

dependencies = [ ]

parallel = 1

start_dir = 'source'

with_configure = False # The default, but just in case this changes in a later version of EasyBuild...

prebuildopts = 'mkdir -p ../bin ; '
buildopts  = 'CC="${MPICC} ${CFLAGS} -I${MKLROOT}/include/fftw -I\$(LIBERIDIR)" '
buildopts += 'FC="${MPIF90} ${F90FLAGS}" '
buildopts += 'LIB="-mkl=parallel -lifcoremt" '
buildopts += 'DESTDIR="../bin" '
buildopts += 'all OpticalConductivityMain install'

#
# Files to copy:
# - The binary openmx and some others from source to bin
# - The documentation file openmx3.8.pdf to the doc subdirectory
# - The subdirectory DFT_DATA13
#
files_to_copy = [
#    (['source/%s' % x for x in ['openmx', 'DosMain', 'OpticalConductivityMain', 'jx', 'analysis_example', 'esp', 'polB', 'bandgnu13', 'bin2txt', 'cube2xsf', 'intensity_map', 'md2axsf']], 
#"bin"), 
    'bin',
    (['source/OpticalConductivityMain'], 'bin'),
    (['openmx' + local_version_major_minor + '.pdf'], 'doc'),
    'DFT_DATA13',
    'work'
]

postinstallcmds = [
    'cd %(installdir)s ; mv work examples' # As there is no easy way to copy a directory to one with a different name in files_to_copy
]

sanity_check_paths = {
    'files' : ['bin/%s' % x for x in ['openmx', 
                                      'DosMain', 'jx', 'analysis_example', 'esp', 'polB', 'bandgnu13', 'bin2txt', 'cube2xsf', 'intensity_map', 'md2axsf',
                                      'OpticalConductivityMain']],
    'dirs'  : ['doc', 'DFT_DATA13', 'examples']
}

moduleclass = 'math'


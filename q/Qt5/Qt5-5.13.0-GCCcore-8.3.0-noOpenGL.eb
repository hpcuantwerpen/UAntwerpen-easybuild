easyblock = 'EB_Qt'

name = 'Qt5'
version = '5.13.0'
versionsuffix = '-noOpenGL'

buildset         = '2019b'
gcc_version      = '8.3.0'
binutils_version = '2.32'

homepage = 'http://qt.io/'

whatis = [
    'Description: Qt is a comprehensive cross-platform C++ application framework',
    'This module is compiled without OpenGL support, so will work on all nodes, but some Qt programs may fail to compile or run',
]

description = """
Qt is a cross-platform GUI development library. It supports not only Windows,
macOS and Linux, but also tablet/phone operating systems such as Android and
iOS and is used in many embedded devices. It is a popular choice for 
developing good-looking cross-platform GUI applications. 

Note Qt is pronounced "Cute".

It is installed with the (L)GPL license.

This module is compiled without support for OpenGL programs. As such it can
be used on all nodes, but not all Qt applications will compile or work.
"""

docurls = [
    'Web-based documentation: http://doc.qt.io/qt-5/',
]

toolchain = {'name': 'GCCcore', 'version': gcc_version}

source_urls = [
    'http://download.qt.io/official_releases/qt/%(version_major_minor)s/%(version)s/single/',
    'http://download.qt.io/archive/qt/%(version_major_minor)s/%(version)s/single/'
]
sources =   ['qt-everywhere-src-%(version)s.tar.xz']
checksums = ['2cba31e410e169bd5cdae159f839640e672532a4687ea0f265f686421e0e86d6']  # qt-everywhere-src-5.13.0.tar.xz
patches =   ['Qt5-5.12.4_fix-avx2.patch']

builddependencies = [
    ('buildtools',  buildset, '', True), # For pkg-config
    ('binutils',    '2.32'),
    ('KHRplatform', '1.0',    '', True),
]

dependencies = [
    ('baselibs', buildset), # For PCRE (not really needed), libjpeg-turbo, libpng, libwebp, DBus, libopus, libevent, ...
#    ('libopus',  '1.3.1'),
    ('GLib',     '2.61.2'),      
    ('HarfBuzz', '2.5.3'),  # Can do without, Qt5 contains its own alternative for some components but not for all.
#    ('SQLite',         '3.21'),        # UPDATE: Qt5 doesn't find this one BEFORE Can do without, Qt5 contains its own alternative
    ('X11',      buildset), # Loads fontconfig and freetype, used by Qt5, though Qt5 also provides its own freetype alternative
    ('FFmpeg',   '4.1.4',  '-CPU'),
#    ('libevent', '2.1.11'),
#    ('NSPR',     '4.22', '-baselibsDevel'), # Moved to baselibs
#    ('NSS',      '3.45', '-baselibsDevel'), # Moved to baselibs
#    ('libdrm',   '2.4.99'), # Moved to X11.
#    ('libGLU',         '9.0.0'),
]

# qtgamepad needs recent kernel/libevdev (fails on RHEL 6.x)
configopts  = '-skip qtgamepad -skip qtscxml -no-opengl ' # One of the qtscxml examples does not compoile.
#configopts  = '-skip qtgamepad -no-opengl ' # One of the qtscxml examples does not compile, but qtscxml is needed for the web engine...
configopts += '-jasper '
configopts += '-system-zlib -system-libjpeg -system-libpng -system-xcb -system-freetype -qt-pcre -system-harfbuzz '
#configopts += '--iconv=gnu '   # Actually, the header file generated for our libiconv is not GNU libiconv...
configopts += '-webengine-ffmpeg -webengine-opus -webengine-webp -webengine-icu '  # Qt5 misses some other components needed to use ffmpeg???

# make sure QtWebEngine component is being built & installed
check_qtwebengine = True

#parallel = 1

moduleclass = 'devel'

easyblock = 'CMakeMake'

name = 'ParaView'
version = '5.4.1'
versionsuffix = '-viz-Python-%(pyver)s'

homepage = "http://www.paraview.org"

whatis = [
    'Description: ParaView is a scientific parallel visualization package suitable for remote visualization',
    'This module is built for the Leibniz visualization node: OpenGL via GPU, no MPI, Python 2.7 support'
]

description = """
ParaView is an open-source, multi-platform data analysis and visualization
application. ParaView users can quickly build visualizations to analyze their
data using qualitative and quantitative techniques. The data exploration can be
done interactively in 3D or programmatically using ParaViewâ€™s batch processing
capabilities.

ParaView was developed to analyze extremely large datasets using distributed
memory computing resources. It can be run on supercomputers to analyze datasets
of petascale size as well as on laptops for smaller data, has become an integral
tool in many national laboratories, universities and industry, and has won
several awards related to high performance computation.

The ParaView binaries in this module were compiled for the Leibniz visualisation
node: They support the OS OpenGL libraries and thus can be run with vglrun to
use the internal GPU and displayed via the TurboVNC server on that node.
"""

usage = """
The ParaView version in this module can be used in combination with the VNC
server and vglrun to enable OpenGL rendering by the GPU in the Leibniz
visualization node.

The module provides all the usual ParaView executables:
* paraview: ParaView GUI client with built-in rendering server
* pvpython: Python interpreter that runs ParaView's Python scripts
* pvbatch:  Python interpreter designed for batch processing rather than 
            interactive scripts
* pvserver: ParaView server for remote visualization, in case a ParaView GUI
            client is used on the desktop rather than the GUI through TurboVNC
* pvdataserver and pvrenderserver
* paraview-config

To start the GUI interface of ParaView, open a VNC session as explained on the
User Portal, open a Terminal window in the VNC window, load the ParaView module
and start ParaView through
$ vglrun paraview
The vglrun command ensures that ParaView uses the GPU for rendering the 
images.
"""

docurls = [
    "Overview of web-based ParaView documentation: https://www.paraview.org/documentation/",
    "Instructions for the Leibniz visualization node: https://www.vscentrum.be/infrastructure/hardware/hardware-ua/visualization",
]

docpaths = [
    "share/paraview-%(version_major_minor)s/doc",
]

toolchain = {'name': 'intel', 'version': '2017c'}
toolchainopts = {'pic': True, 'usempi': False}

source_urls = [
    'https://www.paraview.org/files/v%(version_major_minor)s/',
    'https://www.paraview.org/files/data/',
]
sources = [
    "ParaView-v%(version)s.tar.gz",
#    "ParaViewData-v%(version)s.tar.gz",     # Only need for running the tests. Or is this also done by make VTKData?
    'ParaViewTutorialData-1.tar.gz',
#    'ParaViewGettingStarted-%(version_major_minor)s.0.pdf',     # Can't do this via sources yet as EasyBuild does not know what to do with a PDF
#    'ParaViewGuide-%(version_major_minor)s.0.pdf',              # Can't do this via sources yet as EasyBuild does not know what to do with a PDF
#    'ParaViewTutorial.pdf',                                     # Can't do this via sources yet as EasyBuild does not know what to do with a PDF
]
#checksums = ['390d0f5dc66bf432e202a39b1f34193af4bf8aad2355338fa5e2778ea07a80e4']

pycpver='36'
dependencies = [
    ('libxml2', '2.9.7'), 
    ('LibTIFF', '4.0.9'), 
    ('Python',  '2.7.14'),
    ('Boost',   '1.65.1',   '-Python-%(pyver)s'),
    ('FFmpeg',  '3.4.1'),
    ('X11',     '20171128'),
#    ('Mesa',    '17.0.2'),
#    ('libGLU',  '9.0.0'),             # Make this a OS dependency for the visualization node
    ('Qt5',     '5.9.3',    '-viz'),
    ('zlib',    '1.2.11'),
    ('HDF5',    '1.8.19',   '-noMPI'),
]

builddependencies = [('buildtools', '2017c', '', True)]

osdependencies = [
    ('mesa-libGLU'),
    ('mesa-libGLU-devel'),
]

separate_build_dir = True

# See the installation documentation: https://www.paraview.org/Wiki/ParaView:Build_And_Install
configopts  = '-DBUILD_SHARED_LIBS=ON '
configopts += '-DBUILD_EXAMPLES=ON '
configopts += '-DPARAVIEW_BUILD_QT_GUI=ON -DPARAVIEW_QT_VERSION=5 '
## Use initial multithreaded VTK filters (introduced in 5.3)
#configopts += '-DPARAVIEW_USE_VTKM=ON '
## and using these filters also requires some VTK options.
#configopts += '-DModule_vtkAcceleratorsVTKm=ON '
# MPI?
configopts += '-DPARAVIEW_USE_MPI=OFF '
configopts += '-DPARAVIEW_USE_OSPRAY=OFF '
configopts += '-DPARAVIEW_USE_OPENVR=OFF '
configopts += '-DPARAVIEW_USE_VISITBRIDGE=OFF '
configopts += '-DPARAVIEW_ENABLE_XDMF3=ON '        # Requires Boost!
configopts += '-DPARAVIEW_ENABLE_FFMPEG=ON '
configopts += '-DPARAVIEW_ENABLE_CATALYST=ON '

configopts += '-DPARAVIEW_ENABLE_PYTHON=ON '
#configopts += '-DPYTHON_LIBRARY=$EBROOTPYTHON/lib/libpython%(pyshortver)sm.so '
#configopts += '-DPYTHON_INCLUDE_DIR=$EBROOTPYTHON/include/python%(pyshortver)sm '
configopts += '-DPYTHON_LIBRARY=$EBROOTPYTHON/lib/libpython%(pyshortver)s.so '
configopts += '-DPYTHON_INCLUDE_DIR=$EBROOTPYTHON/include/python%(pyshortver)s '
configopts += '-DPYTHON_EXECUTABLE=$EBROOTPYTHON/bin/python '

# And config options for the modules of VTK that are built as part of the ParaView build process
configopts += '-DVTK_RENDERING_BACKEND=OpenGL2 '
configopts += '-DVTK_USE_SYSTEM_HDF5=ON '
# if you want to build server only Paraview, uncomment the following line:
# configopts += '-DVTK_USE_X=OFF '

# Without internet connection turn off testing (uncomment the following line)
configopts += '-DBUILD_TESTING=OFF '
# Or consult https://gitlab.kitware.com/vtk/vtk/blob/master/Documentation/dev/git/data.md
# and download ExternalData to $EASYBUILD_SOURCEPATH and adjust -DExternalData_OBJECT_STORES accordingly
# Without internet connection, comment the following two lines (configopts and prebuildopts)
configopts += '-DExternalData_OBJECT_STORES=%(builddir)s/ExternalData '

# Needed to build correctly with Python 3. Make sure six is installed in the included Python module!
configopts += '-DVTK_USE_SYSTEM_SIX=ON '

# The ParaView server can be cranky, test downloads are quite often failing, especially in the case
# of parallel downloads. Using ; insted of && gives a second chance to download the test files, if the
# first serial attempt wou1Gld fail.
prebuildopts = 'make VTKData ;'

#parallel = 1

postinstallcmds = [ 
    'wget https://www.paraview.org/files/v%(version_major_minor)s/ParaViewGettingStarted-%(version_major_minor)s.0.pdf',
    'wget https://www.paraview.org/files/v%(version_major_minor)s/ParaViewGuide-%(version_major_minor)s.0.pdf',
    'wget https://www.paraview.org/files/v%(version_major_minor)s/ParaViewTutorial.pdf',
    'mkdir -p %(installdir)s/share/paraview-%(version_major_minor)s/data',
    'mkdir -p %(installdir)s/share/paraview-%(version_major_minor)s/doc',
    'cp -r %(builddir)s/ParaViewTutorialData/*                                          %(installdir)s/share/paraview-%(version_major_minor)s/data',
    'cp %(builddir)s/easybuild_obj/ParaViewGettingStarted-%(version_major_minor)s.0.pdf %(installdir)s/share/paraview-%(version_major_minor)s/doc/GettingStarted.pdf', 
    'cp %(builddir)s/easybuild_obj/ParaViewGuide-%(version_major_minor)s.0.pdf          %(installdir)s/share/paraview-%(version_major_minor)s/doc/Guide.pdf', 
    'cp %(builddir)s/easybuild_obj/ParaViewTutorial.pdf                                 %(installdir)s/share/paraview-%(version_major_minor)s/doc/Tutorial.pdf', 
] 

modextravars = {
    'QT_XKB_CONFIG_ROOT': '/usr/share/X11/xkb',
} 
moduleclass = 'vis'

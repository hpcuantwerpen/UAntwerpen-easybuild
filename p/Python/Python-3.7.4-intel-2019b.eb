name =    'Python'
version = '3.7.4'

local_mkl_random_version = '1.0.4' # Because of the special download procedure.
local_mkl_fft_version    = '1.0.14' 

local_pymaj   = ''.join(version.split('.')[:1])
local_pycpver = ''.join(version.split('.')[:2])

local_buildset =    '2019b'
local_gcc_version = '8.3.0'

homepage = 'http://python.org/'

whatis = [
    'Description: Python %(version)s interpreter with a range of optional packages'
]

description = """
This is the Python %(version_major_minor)s interpreter with several additional packages requested by
UAntwerp researchers installed.

If you don't find your favourite packages in this module, check the other
modules that have Python in their name, try to install them in your
personal directories and/or contact UAntwerp HPC support
at hpc@uantwerpen.be.

Compared to Python 3 in earlier toolchains, pysam is missing since it fails to
compile with Intel and with the GNU compilers in combination with Python %(version_major_minor)s.
"""

usage = """
There is ample documentation about Python available on the web; please check
there or any good book about Python for usage information.

To get a list of installed Python packages, load this module file and then
execute
pydoc modules

The preferred way to install additional Python modules in your own directories
is to put them in you /data directory using pip or easy_install.
Instructions can be found at:
https://vlaams-supercomputing-centrum-vscdocumentation.readthedocs-hosted.com/en/latest/software/python_package_management.html#alternatives-to-conda
(but replace /user with /data).
"""

toolchain =     {'name': 'intel', 'version': local_buildset}
toolchainopts = {'pic': True}

#source_urls = ['http://www.python.org/ftp/%(namelower)s/%(version)s/']
#sources = [SOURCE_TGZ]
sources = [
    { 
        'filename':   SOURCE_TGZ,
        'source_urls': ['http://www.python.org/ftp/%(namelower)s/%(version)s/']
    },
# Using download_filename / filename in the exts_list does not work, but downloading
# here does the job...
    { 
        'download_filename': 'v' + local_mkl_random_version + '.tar.gz',
        'filename': 'mkl_random-'+ local_mkl_random_version + '.tar.gz',
        'source_urls': ['https://github.com/IntelPython/mkl_random/archive']
    }, 
    { 
        'download_filename': 'v' + local_mkl_fft_version + '.tar.gz',
        'filename': 'mkl_fft-'+ local_mkl_fft_version + '.tar.gz',
        'source_urls': ['https://github.com/IntelPython/mkl_fft/archive']
    }, 
]

# python needs bzip2 to build the bz2 package
dependencies = [
    ('baselibs',    local_buildset, '', ('GCCcore', local_gcc_version)),
    # Baselibs is used for: bzip2, zlib, lz4, ncurses, libreadline, GMP
    # libffi, libpng, freetype, libyaml, cURL
#   ('Tcl',         '8.6.8'),                  # KL 20171204, enters via Tk and SQLite
    ('Tk',          '8.6.9'),                  # KL 20171204
    ('SQLite',      '3.29.0'),                 # KL 20171204
    ('HDF5',        '1.8.21', '-MPI'),       # KL 20180629, needed for hf5py 
    ('SuiteSparse', '4.5.6',  '-METIS-5.1.0'), # KL 20180703, for umfpack support in NumPy.
#    ('protobuf',    '3.5.0'),  # KL 20171204, protobuf now again in a separate module, faster code than the PyPi module
    # OS dependency should be preferred if the os version is more recent then this version,
    # it's nice to have an up to date openssl for security reasons
    # ('OpenSSL', '1.0.2h'),
]

builddependencies = [
#    ('buildtools', '%(toolchain_version)s', '', True),   # matplotlib is incompatible with buildtools
]

osdependencies = [
    ('openssl-devel', 'libssl-dev', 'libopenssl-devel')
]

configopts  = '--with-system-expat '
preconfigopts = 'OPENSSL_INCLUDES="/usr/include" OPENSSL_LDFLAGS="-L/usr/lib64" OPENSSL_LIBS="-lssl -lcrypto" ' # May be needed to avoid linking with the libssl from NSS if present.

# order is important!
# package versions updated 20190730
# skipsteps=['extensions'] # This doesn't work unfortunately.
exts_list = [
    ('six', '1.12.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('pyparsing', '2.4.2', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('attrs', '19.1.0', {
        'source_urls': [PYPI_SOURCE],
        'modulename': 'attr',
    }),
    ('packaging', '19.1', {  # Needed for recent versions of setuptools
        'source_urls': [PYPI_SOURCE],
    }),
    ('appdirs', '1.4.3', {   # Needed for recent versions of setuptools
        'source_urls': [PYPI_SOURCE],
    }),
    ('setuptools', '41.0.1', {  # Is this stil needed? It is not installed with --skip --rebuild, so there might be a version included with Python.
        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': [PYPI_SOURCE],
    }),
    ('wheel', '0.33.4', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('pip', '19.2.1', {  # Is this stil needed? It is not installed with --skip --rebuild, so there might be a version included with Python.
        'source_urls': [PYPI_SOURCE],
    }),
    ('nose', '1.3.7', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('numpy', '1.17.0', { # Already have other modules that do require versions >= 1.14.1.
        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': [PYPI_SOURCE],
        'patches':     ['numpy-1.12.0-mkl.patch'], 
    }),
    ('scipy', '1.3.0', {
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': [PYPI_SOURCE],
    }),
#    ('dateutil', '2.8.0', {
#        'source_tmpl': 'python-%(name)s-%(version)s.tar.gz',
#        'source_urls': ['https://pypi.python.org/packages/source/p/python-dateutil/'],
#    }),
#    ('python-dateutil', '2.8.0', {
#        'source_tmpl': 'python-dateutil-%(version)s.tar.gz',
#        'source_urls': [PYPI_SOURCE],
#        'modulename':  'dateutil',
#    }),
    ('python-dateutil', '2.8.0', {
#        'source_tmpl': 'python-dateutil-%(version)s.tar.gz',
        'source_urls': [PYPI_SOURCE],
        'modulename':  'dateutil',
    }),
    ('Cycler', '0.10.0', {    # Requirement for matplotlib according to the documentation.
        'modulename': 'cycler',
        'source_urls': [PYPI_SOURCE],
        'source_tmpl': 'cycler-%(version)s.tar.gz',
    }),
    ('blist', '1.3.6', { # REMOVE IN FUTURE VERSION? CODE NOT MAINTAINED
        'source_urls': [PYPI_SOURCE],
    }),
    ('mpi4py', '3.0.2', {
#        'source_urls': ['http://bitbucket.org/mpi4py/mpi4py/downloads/'],
        'source_urls': ['https://pypi.python.org/packages/source/rmp/mpi4py/'],
    }),
    ('paycheck', '1.0.2', {
        'source_urls': [PYPI_SOURCE],
        'patches': [
            'paycheck-1.0.2_setup-open-README-utf8.patch',
        ],
    }),
    ('pbr', '5.4.1', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('lockfile', '0.12.2', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('Cython', '0.29.3', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('setuptools_scm', '3.3.3', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('deap', '1.3.0', {
#        'source_tmpl': '%(name)s-%(version)s.post2.tar.gz',
        'source_urls': [PYPI_SOURCE],
#        'patches': [
#            'deap-1.0.2_setup-open-README-utf8.patch',
#        ],
    }),
    ('decorator', '4.4.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('arff', '2.4.0', {
        'source_tmpl': 'liac-%(name)s-%(version)s.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/l/liac-arff/'],
    }),
    ('pycrypto', '2.6.1', {
        'modulename': 'Crypto',
        'source_urls': [PYPI_SOURCE],
    }),
    ('ecdsa', '0.13.2', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('ipaddress', '1.0.22', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('asn1crypto', '0.24.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('idna', '2.8', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('pycparser', '2.19', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('cffi', '1.12.3', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('cryptography', '2.7', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('pyasn1', '0.4.5', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('PyNaCl', '1.3.0', {
        'source_urls': [PYPI_LOWER_SOURCE],
        'modulename': 'nacl',
    }),
    ('bcrypt', '3.1.7', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('paramiko', '2.6.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('netifaces', '0.10.9', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('netaddr', '0.7.19', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('funcsigs', '1.0.2', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('mock', '3.0.5', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('pytz', '2019.1', {  # Requirement for matplotlib
#        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': [PYPI_SOURCE],
    }),
    ('pandas', '0.25.0', {
        'source_urls': [PYPI_SOURCE],
    }),
#    ('enum34', '1.1.6', {  # Not needed with Python 3.6 or 3.7.
#        'modulename': 'enum',
#        'source_urls': ['https://pypi.python.org/packages/source/e/enum34'],
#    }),
    ('bitstring', '3.1.6', {
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': [PYPI_SOURCE],
    }),
    ('kiwisolver', '1.1.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('matplotlib', '3.1.1', {  # Problem: The test infrastructure is not integrated in the distribution.
#    ('matplotlib', '1.5.3', { # Version used in 2016b to check if the install works
        'source_urls': [PYPI_SOURCE],
    }),
    ('virtualenv', '16.7.2', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('lz4', '2.1.10', { # Useful option for joblib
        'source_urls': [PYPI_SOURCE],
    }),
    ('joblib', '0.13.2', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('sklearn', '0.21.3', {
        'source_tmpl': 'scikit-learn-%(version)s.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/s/scikit-learn'],
    }),
    ('argparse', '1.4.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('pyzmq', '18.0.2', {
        'modulename':  'zmq',
        'source_urls': [PYPI_SOURCE],
    }),
    ('greenlet', '0.4.15', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('scoop', '0.7.1.1', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('lxml', '4.4.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('chardet', '3.0.4', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('certifi', '2019.6.16', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('urllib3', '1.25.3', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('requests', '2.22.0', { # Needed for the easyconfig update script.
        'source_urls': [PYPI_SOURCE],
    }),
    ('pysam', '0.15.3', {  # Still fails with Python 3.7.0 with EasyBuild.
        'source_urls':  ['https://pypi.python.org/packages/source/p/pysam'],
    }),
    ('tinyarray', '1.2.1', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('absl-py', '0.7.1', {
        'modulename': 'absl',
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': [PYPI_SOURCE],
    }), 
    ('xlrd', '1.2.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('py_expression_eval', '0.3.9', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('tabulate', '0.8.3', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('ujson', '1.35', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('atomicwrites', '1.3.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('py', '1.8.0', { # Needed for pytest
        'source_urls': [PYPI_SOURCE],
    }),
    ('scandir', '1.10.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('pathlib2', '2.3.4', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('zipp', '0.5.2', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('importlib-metadata', '0.19', {
        'modulename':  'importlib_metadata',
        'source_tmpl': 'importlib_metadata-%(version)s.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/i/importlib.metadata'],
    }),
    ('pluggy', '0.12.0', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('more-itertools', '7.2.0', {
        'modulename':  'more_itertools',
        'source_urls': [PYPI_SOURCE],
    }),
    ('wcwidth', '0.1.7', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('pytest', '5.0.1', { # Needed for recent versions of kwant (which is not installed here)
        'source_urls': [PYPI_SOURCE],
    }),
    ('Click', '7.0', {
        'modulename':  'click',
        'source_urls': [PYPI_LOWER_SOURCE],
    }),
    ('psutil', '5.6.3', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('future', '0.17.1', {
        'source_urls': [PYPI_SOURCE],
    }),
#
# Packages for CMT
#
    ('h5py', '2.9.0', {
        'source_urls': [PYPI_SOURCE],
#        # Can't use this in the regular Python module as the import fails in a non-MPI program.
#        'preconfigopts': 'CC=mpiicc HDF5_MPI="ON"',
#        'prebuildopts': 'export CC=mpiicc && export HDF5_MPI="ON" && python setup.py configure --mpi --hdf5=$EBROOTHDF5 && ',
#        'preinstallopts': 'CC=mpiicc HDF5_MPI="ON"',
    }),
#
# Debug and profiling packages used in some benchmark scripts
# memory_profiler and psutil
#
    ('memory_profiler', '0.55.0', {
        'source_urls': [PYPI_SOURCE],
    }),
# Some packages for TensorFlow that may be useful to others also and for which
# TensorFlow is not too picky on the version number.
    ('astar', '0.9', {
        'source_tmpl':    '%%(name)s-%%(version)s-py%(pyv)s-none-any.whl' % {'pyv': local_pymaj},
        'source_urls':    [PYPI_SOURCE],
        'use_pip':        True,
        'unpack_sources': False,
    }),
    ('gast', '0.2.2', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('termcolor', '1.1.0', {
        'source_urls': [PYPI_SOURCE],
    }),
#
# Requested by Yannick Engelman
#
    ('mpmath', '1.1.0', {
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': [PYPI_SOURCE],
    }),
#
# New dependecy for kwant, and uses mpmath
#
    ('sympy', '1.4', {
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': [PYPI_SOURCE],
    }),
#
# Other packages that were used by some other software installed at UAntwerp but
# might be of more general use.
#
    ('PrettyTable', '0.7.2', {
        'source_tmpl': 'prettytable-%(version)s.tar.gz', # %(namelower)s does not work at this location...
        'source_urls': [PYPI_SOURCE],
        'modulename':  'prettytable',
    }),
    ('PyYAML', '5.1.1', {  # Needed for PyTorch
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': [PYPI_LOWER_SOURCE],
        'modulename':  'yaml',
    }),
#
# Added for USPEX (Rolando Saniz and Marnik Berckx)
#
    ('spglib', '1.14.1.post0', {
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': [PYPI_SOURCE],
    }),
    ('pysqlite3', '0.2.1', {  # Note that this is Python 2 only!
        'modulename':  'pysqlite3',
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': [PYPI_SOURCE],
    }),
#
# Usefull for LAMMPS
#
    ('networkx', '2.3', {
        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': [PYPI_SOURCE],
    }),
#
# Popular extensions found in miniconda installations
#
    ('pycosat', '0.6.3', {
        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': [PYPI_SOURCE],
    }),
#    ('ruamel.yaml.clib', '0.1.0', {
#        'modulename':  'ruamel.yaml', # Cannot import ruamel.yaml.clib and the trick with the empty directory in postinstallcmds does not work in this EasyConfig.
#        'use_pip':     True, # Otherwise produces an error message that you have to install with pip install.
##        'installopts': '--install-option="--prefix=%(installdir)s"',
#        'source_urls': [PYPI_SOURCE],
#    }),
#    ('ruamel.yaml', '0.16.0', { # Install before pyOpenSSL, the latter cause strange problems when compiling.
#        'modulename':  'ruamel.yaml',
#        # ruamel.yaml-0.16.0-py2.py3-none-any.whl (122.2 kB)  Copy SHA256 hash SHA256
#        'source_tmpl': '%(name)s-%(version)s-py2.py3-none-any.whl',
#        'source_urls': [PYPI_SOURCE],
#        'use_pip':     False,
#    }),
    ('ruamel.yaml', '0.15.100', { # # New API which is incompatible with previous versions, from 0.16.0 also split in two modules....
        'modulename':  'ruamel.yaml',
        # ruamel.yaml-0.16.0-py2.py3-none-any.whl (122.2 kB)  Copy SHA256 hash SHA256
#        'source_tmpl': '%(name)s-%(version)s-py2.py3-none-any.whl',
        'source_urls': [PYPI_SOURCE],
        'use_pip':     True, # pip mandatory for this package.
    }),
    ('pyOpenSSL', '19.0.0', {
        'modulename':  'OpenSSL',
        'source_urls': ['https://pypi.python.org/packages/source/P/PyOpenSSL'],
    }),
    ('PySocks', '1.7.0', {
        'modulename':  'socks',
        'source_urls': [PYPI_SOURCE],
    }),
    ('xonsh', '0.9.9', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('SIP', '4.19.8', { # Python 3.5 and later only! And only available as a wheel.
        'modulename':     'sip',
        # sip-4.19.8-cp37-cp37m-manylinux1_x86_64.whl
        'source_tmpl':    '%%(namelower)s-%%(version)s-cp%(local_pycpver)s-cp%(local_pycpver)sm-manylinux1_x86_64.whl' % {'local_pycpver': local_pycpver},
        'source_urls':    [PYPI_LOWER_SOURCE],
        'use_pip':        True,
        'unpack_sources': False,
    }),
    ('libarchive', '0.4.7', {
        'source_urls': [PYPI_SOURCE],
    }),
    ('gmpy2', '2.0.8', { # Python 3.5 and later only!
        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': [PYPI_SOURCE],
    }),
    ('parso', '0.5.1', { # depends on parso
        'source_urls': [PYPI_SOURCE],
    }),
    ('jedi', '0.14.1', { # depends on parso
        'source_urls': [PYPI_SOURCE],
    }),
    ('prompt_toolkit', '2.0.9', { # depends on parso
        'source_urls': [PYPI_SOURCE],
    }),
    ('mkl_random', local_mkl_random_version, {
        'modulename': 'mkl_random',
        # https://github.com/IntelPython/mkl_random/archive/v1.0.4.tar.gz
 #       'sources': [{ 'download_filename': 'v%(version)s.tar.gz',
 #                     'filename': 'mkl_random-%(version)s.tar.gz',
 #                     'source_urls': ['https://github.com/IntelPython/mkl_random/archive']
 #                  }],
        'use_pip':        True,
    }),
    ('mkl_fft', local_mkl_fft_version, {
        'modulename': 'mkl_fft',
        'use_pip':        True,
    }),

#######
# Other
#   We will include this in a separate module to have a proper binary installation.
#    ('protobuf', '3.4.0', { # Needed for TensorFlow, uses the protobuf module.
#        'modulename': 'google.protobuf',
#        'source_urls': ['https://pypi.python.org/packages/source/p/protobuf'],
#    }),
]

# The next block does not work in a Python EasyBlock EasyConfig: There is no 
# substitution of the variables....
#postinstallcmds = [
#    # The next command is needed to make sure the sanity check for ruamel.yaml.clib works.
#    # Manual installtion via pip --install-option="--prefix... does create that directory.
#    "mkdir -p %(installdir)s/lib/python%(pyshortver)s/site-packages/ruamel/yaml/clib" % { 'installdir': installdir },
#]

moduleclass = 'lang'

modluafooter= """
family("python%(version_major_minor)s")
"""


name = 'Python'
version = '3.7.1'

pymaj = ''.join(version.split('.')[:1])

homepage = 'http://python.org/'

whatis = [
    'Description: Python %(version)s interpreter with a range of optional packages'
]

description = """
This is the Python %(version_major_minor)s interpreter with several additional packages requested by
UAntwerp researchers installed.

If you don't find your favourite packages in this module, check the other
modules that have Python in their name, try to install them in your
personal directories and/or contact UAntwerp HPC support
at hpc@uantwerpen.be.

Compared to Python 3 in earlier toolchains, pysam is missing since it fails to
compile with Intel and with the GNU compilers in combination with Python %(version_major_minor)s.
"""

usage = """
There is ample documentation about Python available on the web; please check
there or any good book about Python for usage information.

To get a list of installed Python packages, load this module file and then
execute
pydoc modules
"""



toolchain = {'name': 'intel', 'version': '2018b'}
toolchainopts = {'pic': True}

source_urls = ['http://www.python.org/ftp/%(namelower)s/%(version)s/']
sources = [SOURCE_TGZ]

# python needs bzip2 to build the bz2 package
dependencies = [
    ('bzip2',       '1.0.6'),                  # KL 20171204
    ('zlib',        '1.2.11'),                 # KL 20171204
    ('ncurses',     '6.1'),                    # KL 20171204
    ('libreadline', '7.0'),                    # KL 20171204
#   ('Tcl',         '8.6.8'),                  # KL 20171204, enters via Tk and SQLite
    ('Tk',          '8.6.8'),                  # KL 20171204
    ('SQLite',      '3.24.0'),                 # KL 20171204
    ('GMP',         '6.1.2'),                  # KL 20171204
    ('libffi',      '3.2.1'),                  # KL 20171204
    ('libpng',      '1.6.34'),                 # KL 20171204, needed for matplotlib and enters also via freetype
    ('freetype',    '2.9.1'),                  # KL 20171204, needed for matplotlib.
    ('libxml2',     '2.9.8'),                  # KL 20171204, needed for lxml
    ('libxslt',     '1.1.32'),                 # KL 20171204, needed for lxml
    ('cURL',        '7.61.0'),                 # KL 20171204, needed for pysam
    ('HDF5',        '1.8.20', '-noMPI'),       # KL 20180629, needed for hf5py 
    ('SuiteSparse', '4.5.6',  '-METIS-5.1.0'), # KL 20180703, for umfpack support in NumPy.
#    ('protobuf',    '3.5.0'),  # KL 20171204, protobuf now again in a separate module, faster code than the PyPi module
    # OS dependency should be preferred if the os version is more recent then this version,
    # it's nice to have an up to date openssl for security reasons
    # ('OpenSSL', '1.0.2h'),
]

builddependencies = [
#    ( 'buildtools', '%(toolchain_version)s', '', True),   # matplotlib is incompatible with buildtools
]

osdependencies = [
    ('openssl-devel', 'libssl-dev', 'libopenssl-devel')
]

# pysam does not compile with Intel on Python 3.7.0, though it does with Python 3.6.6...
# For Intel:
pysam_prebuildopts  = 'VERBOSE=1 '
pysam_prebuildopts += 'CC="gcc"  CFLAGS="-march=native" '    # Pybinding currently does not compile with icc/icpc, so enforce gcc/g++
pysam_prebuildopts += 'CXX="g++" CXXFLAGS="-march=native" '  # The pybinding cmake recipes automatically add -O3 -fPIC -stc=c++11

# order is important!
# package versions updated 20180814
exts_list = [
    ('six', '1.11.0', {
        'source_urls': ['https://pypi.python.org/packages/source/s/six/'],
    }),
    ('pyparsing', '2.3.0', {
        'source_urls': ['https://pypi.python.org/packages/source/p/pyparsing/'],
    }),
    ('packaging', '18.0', {  # Needed for recent versions of setuptools
        'source_urls': ['https://pypi.python.org/packages/source/p/packaging/'],
    }),
    ('appdirs', '1.4.3', {   # Needed for recent versions of setuptools
        'source_urls': ['https://pypi.python.org/packages/source/a/appdirs/'],
    }),
    ('setuptools', '40.5.0', {  # Is this stil needed? It is not installed with --skip --rebuild, so there might be a version included with Python.
        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': ['https://pypi.python.org/packages/source/s/setuptools/'],
    }),
    ('wheel', '0.32.2', {
        'source_urls': ['https://pypi.python.org/packages/source/w/wheel/'],
    }),
    ('pip', '18.1', {  # Is this stil needed? It is not installed with --skip --rebuild, so there might be a version included with Python.
        'source_urls': ['https://pypi.python.org/packages/source/p/pip/'],
    }),
    ('nose', '1.3.7', {
        'source_urls': ['https://pypi.python.org/packages/source/n/nose/'],
    }),
    ('numpy', '1.15.4', { # Already have other modules that do require versions >= 1.14.1.
        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': ['https://pypi.python.org/packages/source/n/numpy'],
        'patches': ['numpy-1.12.0-mkl.patch'], 
    }),
    ('scipy', '1.1.0', {
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/s/scipy'],
    }),
    ('dateutil', '2.7.5', {
        'source_tmpl': 'python-%(name)s-%(version)s.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/p/python-dateutil/'],
    }),
    ('Cycler', '0.10.0', {    # Requirement for matplotlib according to the documentation.
        'modulename': 'cycler',
        'source_urls': ['https://pypi.python.org/packages/source/C/Cycler'],
        'source_tmpl': 'cycler-%(version)s.tar.gz',
    }),
    ('blist', '1.3.6', {
        'source_urls': ['https://pypi.python.org/packages/source/b/blist/'],
    }),
    ('mpi4py', '3.0.0', {
#        'source_urls': ['http://bitbucket.org/mpi4py/mpi4py/downloads/'],
        'source_urls': ['https://pypi.python.org/packages/source/rmp/mpi4py/'],
    }),
    ('paycheck', '1.0.2', {
        'source_urls': ['https://pypi.python.org/packages/source/p/paycheck/'],
        'patches': [
            'paycheck-1.0.2_setup-open-README-utf8.patch',
        ],
    }),
    ('pbr', '5.1.1', {
        'source_urls': ['https://pypi.python.org/packages/source/p/pbr/'],
    }),
    ('lockfile', '0.12.2', {
        'source_urls': ['https://pypi.python.org/packages/source/l/lockfile/'],
    }),
    ('Cython', '0.29', {
        'source_urls': ['https://pypi.python.org/packages/source/c/cython/'],
    }),
    ('deap', '1.2.2', {
#        'source_tmpl': '%(name)s-%(version)s.post2.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/d/deap/'],
#        'patches': [
#            'deap-1.0.2_setup-open-README-utf8.patch',
#        ],
    }),
    ('decorator', '4.3.0', {
        'source_urls': ['https://pypi.python.org/packages/source/d/decorator/'],
    }),
    ('arff', '2.3.1', {
        'source_tmpl': 'liac-%(name)s-%(version)s.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/l/liac-arff/'],
    }),
    ('pycrypto', '2.6.1', {
        'modulename': 'Crypto',
        'source_urls': ['http://ftp.dlitz.net/pub/dlitz/crypto/pycrypto/'],
    }),
    ('ecdsa', '0.13', {
        'source_urls': ['https://pypi.python.org/packages/source/e/ecdsa/'],
    }),
    ('cryptography', '2.3.1', {
        'source_urls': ['https://pypi.python.org/packages/source/c/cryptography/'],
    }),
    ('pyasn1', '0.4.4', {
        'source_urls': ['https://pypi.python.org/packages/source/p/pyasn1/'],
    }),
    ('paramiko', '2.4.2', {
        'source_urls': ['https://pypi.python.org/packages/source/p/paramiko/'],
    }),
    ('netifaces', '0.10.7', {
        'source_urls': ['https://pypi.python.org/packages/source/n/netifaces'],
    }),
    ('netaddr', '0.7.19', {
        'source_urls': ['https://pypi.python.org/packages/source/n/netaddr'],
    }),
    ('funcsigs', '1.0.2', {
        'source_urls': ['https://pypi.python.org/packages/source/f/funcsigs'],
    }),
    ('mock', '2.0.0', {
        'source_urls': ['https://pypi.python.org/packages/source/m/mock'],
    }),
    ('pytz', '2018.7', {  # Requirement for matplotlib
#        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': ['https://pypi.python.org/packages/source/p/pytz'],
    }),
    ('pandas', '0.23.4', {
        'source_urls': ['https://pypi.python.org/packages/source/p/pandas'],
    }),
    ('enum34', '1.1.6', {  # Is this stil needed? It is not installed with --skip --rebuild, so there might be a version included with Python.
        'modulename': 'enum',
        'source_urls': ['https://pypi.python.org/packages/source/e/enum34'],
    }),
    ('bitstring', '3.1.5', {
        'source_tmpl': '%(name)s-%(version)s.zip',
        'source_urls': ['https://pypi.python.org/packages/source/b/bitstring'],
    }),
    ('matplotlib', '3.0.1', {  # Problem: The test infrastructure is not integrated in the distribution.
#    ('matplotlib', '1.5.3', { # Version used in 2016b to check if the install works
        'source_urls': ['https://pypi.python.org/packages/source/m/matplotlib/'],
    }),
    ('virtualenv', '16.1.0', {
        'source_urls': ['https://pypi.python.org/packages/source/v/virtualenv'],
    }),
    ('sklearn', '0.20.0', {
        'source_tmpl': 'scikit-learn-%(version)s.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/s/scikit-learn'],
    }),
    ('scoop', '0.7.1.1', {
        'source_urls': ['https://pypi.python.org/packages/source/s/scoop'],
    }),
    ('lxml', '4.2.5', {
        'source_urls': ['https://pypi.python.org/packages/source/l/lxml'],
    }),
    ('requests', '2.20.0', { # Needed for the easyconfig update script.
        'source_urls': ['https://pypi.python.org/packages/source/r/requests'],
    }),
## Pysam does not work with Python 3.7.0, tried with Intel and GCC.
#    ('pysam', '0.15.0', {  # Still fails with Python 3.7.0 with EasyBuild.
#        'source_urls':  ['https://pypi.python.org/packages/source/p/pysam'],
#        'prebuildopts': pysam_prebuildopts, # To use GCC instead.
#    }),
    ('tinyarray', '1.2.1', {
        'source_urls': ['https://pypi.python.org/packages/source/t/tinyarray'],
    }),
    ('dev', '0.4.0', {
        'source_urls': ['https://pypi.python.org/packages/source/d/dev'],
    }),
    ('absl-py', '0.6.1', {
        'modulename': 'absl',
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/a/absl-py'],
    }), 
    ('py', '1.7.0', { # Needed for pytest
        'source_urls': ['https://pypi.python.org/packages/source/p/py'],
    }),
    ('pytest', '3.10.0', { # Needed for recent versions of kwant (which is not installed here)
        'source_urls': ['https://pypi.python.org/packages/source/p/pytest'],
    }),
#
# Packages for CMT
#
    ('h5py', '2.8.0', {
        'source_urls': ['https://pypi.python.org/packages/source/h/h5py'],
    }),
#
# Debug and profiling packages used in some benchmark scripts
# memory_profiler and psutil
#
    ('psutil', '5.4.8', {
        'source_urls': ['https://pypi.python.org/packages/source/p/psutil'],
    }),
    ('memory_profiler', '0.54.0', {
        'source_urls': ['https://pypi.python.org/packages/source/m/memory_profiler'],
    }),
# Some packages for TensorFlow that may be useful to others also and for which
# TensorFlow is not too picky on the version number.
    ('astar', '0.9', {
        'source_tmpl':    '%%(name)s-%%(version)s-py%(pyv)s-none-any.whl' % {'pyv': pymaj},
        'source_urls':    ['https://pypi.python.org/packages/source/a/astar'],
        'use_pip':        True,
        'unpack_sources': False,
    }),
    ('gast', '0.2.0', {
        'source_urls': ['https://pypi.python.org/packages/source/g/gast'],
    }),
    ('termcolor', '1.1.0', {
        'source_urls': ['https://pypi.python.org/packages/source/t/termcolor'],
    }),
#
# Requested by Yannick Engelman
#
    ('mpmath', '1.0.0', {
        'source_tmpl': '%(name)s-%(version)s.tar.gz',
        'source_urls': ['https://pypi.python.org/packages/source/m/mpmath'],
    }),
#
# Other packages that were used by some other software installed at UAntwerp but
# might be of more general use.
#
    ('PrettyTable', '0.7', {
        'source_tmpl': 'prettytable-%(version)s.tar.gz', # %(namelower)s does not work at this location...
        'source_urls': ['https://pypi.python.org/packages/source/p/prettytable'],
        'modulename':  'prettytable',
    }),
#######
# Other
#   We will include this in a separate module to have a proper binary installation.
#    ('protobuf', '3.4.0', { # Needed for TensorFlow, uses the protobuf module.
#        'modulename': 'google.protobuf',
#        'source_urls': ['https://pypi.python.org/packages/source/p/protobuf'],
#    }),
]

moduleclass = 'lang'
